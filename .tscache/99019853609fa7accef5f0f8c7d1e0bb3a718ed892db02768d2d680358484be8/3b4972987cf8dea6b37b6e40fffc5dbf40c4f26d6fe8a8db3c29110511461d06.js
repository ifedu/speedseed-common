/* eslint-disable babel/new-cap, xo/throw-new-error */
'use strict';
module.exports = function (str, pos) {
    if (str === null || str === undefined) {
        throw TypeError();
    }
    str = String(str);
    var size = str.length;
    var i = pos ? Number(pos) : 0;
    if (Number.isNaN(i)) {
        i = 0;
    }
    if (i < 0 || i >= size) {
        return undefined;
    }
    var first = str.charCodeAt(i);
    if (first >= 0xD800 && first <= 0xDBFF && size > i + 1) {
        var second = str.charCodeAt(i + 1);
        if (second >= 0xDC00 && second <= 0xDFFF) {
            return ((first - 0xD800) * 0x400) + second - 0xDC00 + 0x10000;
        }
    }
    return first;
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQzpcXFVzZXJzXFxpZmVkdVxcQXBwRGF0YVxcUm9hbWluZ1xcbnZtXFx2OC40LjBcXG5vZGVfbW9kdWxlc1xcZ2VuZXJhdG9yLXNwZWVkc2VlZFxcbm9kZV9tb2R1bGVzXFxjb2RlLXBvaW50LWF0XFxpbmRleC5qcyIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxpZmVkdVxcQXBwRGF0YVxcUm9hbWluZ1xcbnZtXFx2OC40LjBcXG5vZGVfbW9kdWxlc1xcZ2VuZXJhdG9yLXNwZWVkc2VlZFxcbm9kZV9tb2R1bGVzXFxjb2RlLXBvaW50LWF0XFxpbmRleC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxzREFBc0Q7QUFDdEQsWUFBWSxDQUFDO0FBQ2IsTUFBTSxDQUFDLE9BQU8sR0FBRyxVQUFVLEdBQUcsRUFBRSxHQUFHO0lBQ2xDLEVBQUUsQ0FBQyxDQUFDLEdBQUcsS0FBSyxJQUFJLElBQUksR0FBRyxLQUFLLFNBQVMsQ0FBQyxDQUFDLENBQUM7UUFDdkMsTUFBTSxTQUFTLEVBQUUsQ0FBQztJQUNuQixDQUFDO0lBRUQsR0FBRyxHQUFHLE1BQU0sQ0FBQyxHQUFHLENBQUMsQ0FBQztJQUVsQixJQUFJLElBQUksR0FBRyxHQUFHLENBQUMsTUFBTSxDQUFDO0lBQ3RCLElBQUksQ0FBQyxHQUFHLEdBQUcsR0FBRyxNQUFNLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBRTlCLEVBQUUsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBQ3JCLENBQUMsR0FBRyxDQUFDLENBQUM7SUFDUCxDQUFDO0lBRUQsRUFBRSxDQUFDLENBQUMsQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLElBQUksSUFBSSxDQUFDLENBQUMsQ0FBQztRQUN4QixNQUFNLENBQUMsU0FBUyxDQUFDO0lBQ2xCLENBQUM7SUFFRCxJQUFJLEtBQUssR0FBRyxHQUFHLENBQUMsVUFBVSxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBRTlCLEVBQUUsQ0FBQyxDQUFDLEtBQUssSUFBSSxNQUFNLElBQUksS0FBSyxJQUFJLE1BQU0sSUFBSSxJQUFJLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFDeEQsSUFBSSxNQUFNLEdBQUcsR0FBRyxDQUFDLFVBQVUsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUM7UUFFbkMsRUFBRSxDQUFDLENBQUMsTUFBTSxJQUFJLE1BQU0sSUFBSSxNQUFNLElBQUksTUFBTSxDQUFDLENBQUMsQ0FBQztZQUMxQyxNQUFNLENBQUMsQ0FBQyxDQUFDLEtBQUssR0FBRyxNQUFNLENBQUMsR0FBRyxLQUFLLENBQUMsR0FBRyxNQUFNLEdBQUcsTUFBTSxHQUFHLE9BQU8sQ0FBQztRQUMvRCxDQUFDO0lBQ0YsQ0FBQztJQUVELE1BQU0sQ0FBQyxLQUFLLENBQUM7QUFDZCxDQUFDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKiBlc2xpbnQtZGlzYWJsZSBiYWJlbC9uZXctY2FwLCB4by90aHJvdy1uZXctZXJyb3IgKi9cbid1c2Ugc3RyaWN0Jztcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKHN0ciwgcG9zKSB7XG5cdGlmIChzdHIgPT09IG51bGwgfHwgc3RyID09PSB1bmRlZmluZWQpIHtcblx0XHR0aHJvdyBUeXBlRXJyb3IoKTtcblx0fVxuXG5cdHN0ciA9IFN0cmluZyhzdHIpO1xuXG5cdHZhciBzaXplID0gc3RyLmxlbmd0aDtcblx0dmFyIGkgPSBwb3MgPyBOdW1iZXIocG9zKSA6IDA7XG5cblx0aWYgKE51bWJlci5pc05hTihpKSkge1xuXHRcdGkgPSAwO1xuXHR9XG5cblx0aWYgKGkgPCAwIHx8IGkgPj0gc2l6ZSkge1xuXHRcdHJldHVybiB1bmRlZmluZWQ7XG5cdH1cblxuXHR2YXIgZmlyc3QgPSBzdHIuY2hhckNvZGVBdChpKTtcblxuXHRpZiAoZmlyc3QgPj0gMHhEODAwICYmIGZpcnN0IDw9IDB4REJGRiAmJiBzaXplID4gaSArIDEpIHtcblx0XHR2YXIgc2Vjb25kID0gc3RyLmNoYXJDb2RlQXQoaSArIDEpO1xuXG5cdFx0aWYgKHNlY29uZCA+PSAweERDMDAgJiYgc2Vjb25kIDw9IDB4REZGRikge1xuXHRcdFx0cmV0dXJuICgoZmlyc3QgLSAweEQ4MDApICogMHg0MDApICsgc2Vjb25kIC0gMHhEQzAwICsgMHgxMDAwMDtcblx0XHR9XG5cdH1cblxuXHRyZXR1cm4gZmlyc3Q7XG59O1xuIl19