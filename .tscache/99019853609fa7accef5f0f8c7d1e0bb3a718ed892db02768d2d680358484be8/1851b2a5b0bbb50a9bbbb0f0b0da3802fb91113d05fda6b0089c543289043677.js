'use strict';
var fs = require('fs');
var pify = require('pify');
var Buffer = require('safe-buffer').Buffer;
var fsP = pify(fs);
var fsReadP = pify(fs.read, { multiArgs: true });
module.exports = function (filepath, pos, len) {
    var buf = Buffer.alloc(len);
    return fsP.open(filepath, 'r')
        .then(function (fd) {
        return fsReadP(fd, buf, 0, len, pos)
            .then(function (readArgs) { return fsP.close(fd)
            .then(function () { return readArgs; }); });
    })
        .then(function (readArgs) {
        // TODO: Use destructuring when Node.js 6 is target
        var bytesRead = readArgs[0];
        var buf = readArgs[1];
        if (bytesRead < len) {
            buf = buf.slice(0, bytesRead);
        }
        return buf;
    });
};
module.exports.sync = function (filepath, pos, len) {
    var buf = Buffer.alloc(len);
    var fd = fs.openSync(filepath, 'r');
    var bytesRead = fs.readSync(fd, buf, 0, len, pos);
    fs.closeSync(fd);
    if (bytesRead < len) {
        buf = buf.slice(0, bytesRead);
    }
    return buf;
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQzpcXFVzZXJzXFxpZmVkdVxcQXBwRGF0YVxcUm9hbWluZ1xcbnZtXFx2OC40LjBcXG5vZGVfbW9kdWxlc1xcZ2VuZXJhdG9yLXNwZWVkc2VlZFxcbm9kZV9tb2R1bGVzXFxyZWFkLWNodW5rXFxpbmRleC5qcyIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxpZmVkdVxcQXBwRGF0YVxcUm9hbWluZ1xcbnZtXFx2OC40LjBcXG5vZGVfbW9kdWxlc1xcZ2VuZXJhdG9yLXNwZWVkc2VlZFxcbm9kZV9tb2R1bGVzXFxyZWFkLWNodW5rXFxpbmRleC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxZQUFZLENBQUM7QUFDYixJQUFNLEVBQUUsR0FBRyxPQUFPLENBQUMsSUFBSSxDQUFDLENBQUM7QUFDekIsSUFBTSxJQUFJLEdBQUcsT0FBTyxDQUFDLE1BQU0sQ0FBQyxDQUFDO0FBQzdCLElBQU0sTUFBTSxHQUFHLE9BQU8sQ0FBQyxhQUFhLENBQUMsQ0FBQyxNQUFNLENBQUM7QUFFN0MsSUFBTSxHQUFHLEdBQUcsSUFBSSxDQUFDLEVBQUUsQ0FBQyxDQUFDO0FBQ3JCLElBQU0sT0FBTyxHQUFHLElBQUksQ0FBQyxFQUFFLENBQUMsSUFBSSxFQUFFLEVBQUMsU0FBUyxFQUFFLElBQUksRUFBQyxDQUFDLENBQUM7QUFFakQsTUFBTSxDQUFDLE9BQU8sR0FBRyxVQUFDLFFBQVEsRUFBRSxHQUFHLEVBQUUsR0FBRztJQUNuQyxJQUFNLEdBQUcsR0FBRyxNQUFNLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBRTlCLE1BQU0sQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLFFBQVEsRUFBRSxHQUFHLENBQUM7U0FDNUIsSUFBSSxDQUFDLFVBQUEsRUFBRTtRQUNQLE9BQUEsT0FBTyxDQUFDLEVBQUUsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxHQUFHLENBQUM7YUFDM0IsSUFBSSxDQUFDLFVBQUEsUUFBUSxJQUFJLE9BQUEsR0FBRyxDQUFDLEtBQUssQ0FBQyxFQUFFLENBQUM7YUFDN0IsSUFBSSxDQUFDLGNBQU0sT0FBQSxRQUFRLEVBQVIsQ0FBUSxDQUFDLEVBREosQ0FDSSxDQUFDO0lBRnhCLENBRXdCLENBQ3hCO1NBQ0EsSUFBSSxDQUFDLFVBQUEsUUFBUTtRQUNiLG1EQUFtRDtRQUNuRCxJQUFNLFNBQVMsR0FBRyxRQUFRLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFDOUIsSUFBSSxHQUFHLEdBQUcsUUFBUSxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBRXRCLEVBQUUsQ0FBQyxDQUFDLFNBQVMsR0FBRyxHQUFHLENBQUMsQ0FBQyxDQUFDO1lBQ3JCLEdBQUcsR0FBRyxHQUFHLENBQUMsS0FBSyxDQUFDLENBQUMsRUFBRSxTQUFTLENBQUMsQ0FBQztRQUMvQixDQUFDO1FBRUQsTUFBTSxDQUFDLEdBQUcsQ0FBQztJQUNaLENBQUMsQ0FBQyxDQUFDO0FBQ0wsQ0FBQyxDQUFDO0FBRUYsTUFBTSxDQUFDLE9BQU8sQ0FBQyxJQUFJLEdBQUcsVUFBQyxRQUFRLEVBQUUsR0FBRyxFQUFFLEdBQUc7SUFDeEMsSUFBSSxHQUFHLEdBQUcsTUFBTSxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsQ0FBQztJQUU1QixJQUFNLEVBQUUsR0FBRyxFQUFFLENBQUMsUUFBUSxDQUFDLFFBQVEsRUFBRSxHQUFHLENBQUMsQ0FBQztJQUN0QyxJQUFNLFNBQVMsR0FBRyxFQUFFLENBQUMsUUFBUSxDQUFDLEVBQUUsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxHQUFHLENBQUMsQ0FBQztJQUVwRCxFQUFFLENBQUMsU0FBUyxDQUFDLEVBQUUsQ0FBQyxDQUFDO0lBRWpCLEVBQUUsQ0FBQyxDQUFDLFNBQVMsR0FBRyxHQUFHLENBQUMsQ0FBQyxDQUFDO1FBQ3JCLEdBQUcsR0FBRyxHQUFHLENBQUMsS0FBSyxDQUFDLENBQUMsRUFBRSxTQUFTLENBQUMsQ0FBQztJQUMvQixDQUFDO0lBRUQsTUFBTSxDQUFDLEdBQUcsQ0FBQztBQUNaLENBQUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcbmNvbnN0IGZzID0gcmVxdWlyZSgnZnMnKTtcbmNvbnN0IHBpZnkgPSByZXF1aXJlKCdwaWZ5Jyk7XG5jb25zdCBCdWZmZXIgPSByZXF1aXJlKCdzYWZlLWJ1ZmZlcicpLkJ1ZmZlcjtcblxuY29uc3QgZnNQID0gcGlmeShmcyk7XG5jb25zdCBmc1JlYWRQID0gcGlmeShmcy5yZWFkLCB7bXVsdGlBcmdzOiB0cnVlfSk7XG5cbm1vZHVsZS5leHBvcnRzID0gKGZpbGVwYXRoLCBwb3MsIGxlbikgPT4ge1xuXHRjb25zdCBidWYgPSBCdWZmZXIuYWxsb2MobGVuKTtcblxuXHRyZXR1cm4gZnNQLm9wZW4oZmlsZXBhdGgsICdyJylcblx0XHQudGhlbihmZCA9PlxuXHRcdFx0ZnNSZWFkUChmZCwgYnVmLCAwLCBsZW4sIHBvcylcblx0XHRcdFx0LnRoZW4ocmVhZEFyZ3MgPT4gZnNQLmNsb3NlKGZkKVxuXHRcdFx0XHRcdC50aGVuKCgpID0+IHJlYWRBcmdzKSlcblx0XHQpXG5cdFx0LnRoZW4ocmVhZEFyZ3MgPT4ge1xuXHRcdFx0Ly8gVE9ETzogVXNlIGRlc3RydWN0dXJpbmcgd2hlbiBOb2RlLmpzIDYgaXMgdGFyZ2V0XG5cdFx0XHRjb25zdCBieXRlc1JlYWQgPSByZWFkQXJnc1swXTtcblx0XHRcdGxldCBidWYgPSByZWFkQXJnc1sxXTtcblxuXHRcdFx0aWYgKGJ5dGVzUmVhZCA8IGxlbikge1xuXHRcdFx0XHRidWYgPSBidWYuc2xpY2UoMCwgYnl0ZXNSZWFkKTtcblx0XHRcdH1cblxuXHRcdFx0cmV0dXJuIGJ1Zjtcblx0XHR9KTtcbn07XG5cbm1vZHVsZS5leHBvcnRzLnN5bmMgPSAoZmlsZXBhdGgsIHBvcywgbGVuKSA9PiB7XG5cdGxldCBidWYgPSBCdWZmZXIuYWxsb2MobGVuKTtcblxuXHRjb25zdCBmZCA9IGZzLm9wZW5TeW5jKGZpbGVwYXRoLCAncicpO1xuXHRjb25zdCBieXRlc1JlYWQgPSBmcy5yZWFkU3luYyhmZCwgYnVmLCAwLCBsZW4sIHBvcyk7XG5cblx0ZnMuY2xvc2VTeW5jKGZkKTtcblxuXHRpZiAoYnl0ZXNSZWFkIDwgbGVuKSB7XG5cdFx0YnVmID0gYnVmLnNsaWNlKDAsIGJ5dGVzUmVhZCk7XG5cdH1cblxuXHRyZXR1cm4gYnVmO1xufTtcbiJdfQ==