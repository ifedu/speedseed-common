'use strict';
var _ = require('lodash');
var chalk = require('chalk');
/**
 * The paginator keep trakcs of a pointer index in a list and return
 * a subset of the choices if the list is too long.
 */
var Paginator = module.exports = function () {
    this.pointer = 0;
    this.lastIndex = 0;
};
Paginator.prototype.paginate = function (output, active, pageSize) {
    pageSize = pageSize || 7;
    var lines = output.split('\n');
    // Make sure there's enough lines to paginate
    if (lines.length <= pageSize + 2) {
        return output;
    }
    // Move the pointer only when the user go down and limit it to 3
    if (this.pointer < 3 && this.lastIndex < active && active - this.lastIndex < 9) {
        this.pointer = Math.min(3, this.pointer + active - this.lastIndex);
    }
    this.lastIndex = active;
    // Duplicate the lines so it give an infinite list look
    var infinite = _.flatten([lines, lines, lines]);
    var topIndex = Math.max(0, active + lines.length - this.pointer);
    var section = infinite.splice(topIndex, pageSize).join('\n');
    return section + '\n' + chalk.dim('(Move up and down to reveal more choices)');
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQzpcXFVzZXJzXFxpZmVkdVxcQXBwRGF0YVxcUm9hbWluZ1xcbnZtXFx2OC40LjBcXG5vZGVfbW9kdWxlc1xcZ2VuZXJhdG9yLXNwZWVkc2VlZFxcbm9kZV9tb2R1bGVzXFxpbnF1aXJlclxcbGliXFx1dGlsc1xccGFnaW5hdG9yLmpzIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXGlmZWR1XFxBcHBEYXRhXFxSb2FtaW5nXFxudm1cXHY4LjQuMFxcbm9kZV9tb2R1bGVzXFxnZW5lcmF0b3Itc3BlZWRzZWVkXFxub2RlX21vZHVsZXNcXGlucXVpcmVyXFxsaWJcXHV0aWxzXFxwYWdpbmF0b3IuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsWUFBWSxDQUFDO0FBRWIsSUFBSSxDQUFDLEdBQUcsT0FBTyxDQUFDLFFBQVEsQ0FBQyxDQUFDO0FBQzFCLElBQUksS0FBSyxHQUFHLE9BQU8sQ0FBQyxPQUFPLENBQUMsQ0FBQztBQUU3Qjs7O0dBR0c7QUFFSCxJQUFJLFNBQVMsR0FBRyxNQUFNLENBQUMsT0FBTyxHQUFHO0lBQy9CLElBQUksQ0FBQyxPQUFPLEdBQUcsQ0FBQyxDQUFDO0lBQ2pCLElBQUksQ0FBQyxTQUFTLEdBQUcsQ0FBQyxDQUFDO0FBQ3JCLENBQUMsQ0FBQztBQUVGLFNBQVMsQ0FBQyxTQUFTLENBQUMsUUFBUSxHQUFHLFVBQVUsTUFBTSxFQUFFLE1BQU0sRUFBRSxRQUFRO0lBQy9ELFFBQVEsR0FBRyxRQUFRLElBQUksQ0FBQyxDQUFDO0lBQ3pCLElBQUksS0FBSyxHQUFHLE1BQU0sQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLENBQUM7SUFFL0IsNkNBQTZDO0lBQzdDLEVBQUUsQ0FBQyxDQUFDLEtBQUssQ0FBQyxNQUFNLElBQUksUUFBUSxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFDakMsTUFBTSxDQUFDLE1BQU0sQ0FBQztJQUNoQixDQUFDO0lBRUQsZ0VBQWdFO0lBQ2hFLEVBQUUsQ0FBQyxDQUFDLElBQUksQ0FBQyxPQUFPLEdBQUcsQ0FBQyxJQUFJLElBQUksQ0FBQyxTQUFTLEdBQUcsTUFBTSxJQUFJLE1BQU0sR0FBRyxJQUFJLENBQUMsU0FBUyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFDL0UsSUFBSSxDQUFDLE9BQU8sR0FBRyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUMsRUFBRSxJQUFJLENBQUMsT0FBTyxHQUFHLE1BQU0sR0FBRyxJQUFJLENBQUMsU0FBUyxDQUFDLENBQUM7SUFDckUsQ0FBQztJQUNELElBQUksQ0FBQyxTQUFTLEdBQUcsTUFBTSxDQUFDO0lBRXhCLHVEQUF1RDtJQUN2RCxJQUFJLFFBQVEsR0FBRyxDQUFDLENBQUMsT0FBTyxDQUFDLENBQUMsS0FBSyxFQUFFLEtBQUssRUFBRSxLQUFLLENBQUMsQ0FBQyxDQUFDO0lBQ2hELElBQUksUUFBUSxHQUFHLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQyxFQUFFLE1BQU0sR0FBRyxLQUFLLENBQUMsTUFBTSxHQUFHLElBQUksQ0FBQyxPQUFPLENBQUMsQ0FBQztJQUVqRSxJQUFJLE9BQU8sR0FBRyxRQUFRLENBQUMsTUFBTSxDQUFDLFFBQVEsRUFBRSxRQUFRLENBQUMsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDN0QsTUFBTSxDQUFDLE9BQU8sR0FBRyxJQUFJLEdBQUcsS0FBSyxDQUFDLEdBQUcsQ0FBQywyQ0FBMkMsQ0FBQyxDQUFDO0FBQ2pGLENBQUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxudmFyIF8gPSByZXF1aXJlKCdsb2Rhc2gnKTtcbnZhciBjaGFsayA9IHJlcXVpcmUoJ2NoYWxrJyk7XG5cbi8qKlxuICogVGhlIHBhZ2luYXRvciBrZWVwIHRyYWtjcyBvZiBhIHBvaW50ZXIgaW5kZXggaW4gYSBsaXN0IGFuZCByZXR1cm5cbiAqIGEgc3Vic2V0IG9mIHRoZSBjaG9pY2VzIGlmIHRoZSBsaXN0IGlzIHRvbyBsb25nLlxuICovXG5cbnZhciBQYWdpbmF0b3IgPSBtb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uICgpIHtcbiAgdGhpcy5wb2ludGVyID0gMDtcbiAgdGhpcy5sYXN0SW5kZXggPSAwO1xufTtcblxuUGFnaW5hdG9yLnByb3RvdHlwZS5wYWdpbmF0ZSA9IGZ1bmN0aW9uIChvdXRwdXQsIGFjdGl2ZSwgcGFnZVNpemUpIHtcbiAgcGFnZVNpemUgPSBwYWdlU2l6ZSB8fCA3O1xuICB2YXIgbGluZXMgPSBvdXRwdXQuc3BsaXQoJ1xcbicpO1xuXG4gIC8vIE1ha2Ugc3VyZSB0aGVyZSdzIGVub3VnaCBsaW5lcyB0byBwYWdpbmF0ZVxuICBpZiAobGluZXMubGVuZ3RoIDw9IHBhZ2VTaXplICsgMikge1xuICAgIHJldHVybiBvdXRwdXQ7XG4gIH1cblxuICAvLyBNb3ZlIHRoZSBwb2ludGVyIG9ubHkgd2hlbiB0aGUgdXNlciBnbyBkb3duIGFuZCBsaW1pdCBpdCB0byAzXG4gIGlmICh0aGlzLnBvaW50ZXIgPCAzICYmIHRoaXMubGFzdEluZGV4IDwgYWN0aXZlICYmIGFjdGl2ZSAtIHRoaXMubGFzdEluZGV4IDwgOSkge1xuICAgIHRoaXMucG9pbnRlciA9IE1hdGgubWluKDMsIHRoaXMucG9pbnRlciArIGFjdGl2ZSAtIHRoaXMubGFzdEluZGV4KTtcbiAgfVxuICB0aGlzLmxhc3RJbmRleCA9IGFjdGl2ZTtcblxuICAvLyBEdXBsaWNhdGUgdGhlIGxpbmVzIHNvIGl0IGdpdmUgYW4gaW5maW5pdGUgbGlzdCBsb29rXG4gIHZhciBpbmZpbml0ZSA9IF8uZmxhdHRlbihbbGluZXMsIGxpbmVzLCBsaW5lc10pO1xuICB2YXIgdG9wSW5kZXggPSBNYXRoLm1heCgwLCBhY3RpdmUgKyBsaW5lcy5sZW5ndGggLSB0aGlzLnBvaW50ZXIpO1xuXG4gIHZhciBzZWN0aW9uID0gaW5maW5pdGUuc3BsaWNlKHRvcEluZGV4LCBwYWdlU2l6ZSkuam9pbignXFxuJyk7XG4gIHJldHVybiBzZWN0aW9uICsgJ1xcbicgKyBjaGFsay5kaW0oJyhNb3ZlIHVwIGFuZCBkb3duIHRvIHJldmVhbCBtb3JlIGNob2ljZXMpJyk7XG59O1xuIl19