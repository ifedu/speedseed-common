'use strict';
module.exports = function (req, time) {
    if (req.timeoutTimer) {
        return req;
    }
    var delays = isNaN(time) ? time : { socket: time, connect: time };
    var host = req._headers ? (' to ' + req._headers.host) : '';
    if (delays.connect !== undefined) {
        req.timeoutTimer = setTimeout(function timeoutHandler() {
            req.abort();
            var e = new Error('Connection timed out on request' + host);
            e.code = 'ETIMEDOUT';
            req.emit('error', e);
        }, delays.connect);
    }
    // Clear the connection timeout timer once a socket is assigned to the
    // request and is connected.
    req.on('socket', function assign(socket) {
        // Socket may come from Agent pool and may be already connected.
        if (!(socket.connecting || socket._connecting)) {
            connect();
            return;
        }
        socket.once('connect', connect);
    });
    function clear() {
        if (req.timeoutTimer) {
            clearTimeout(req.timeoutTimer);
            req.timeoutTimer = null;
        }
    }
    function connect() {
        clear();
        if (delays.socket !== undefined) {
            // Abort the request if there is no activity on the socket for more
            // than `delays.socket` milliseconds.
            req.setTimeout(delays.socket, function socketTimeoutHandler() {
                req.abort();
                var e = new Error('Socket timed out on request' + host);
                e.code = 'ESOCKETTIMEDOUT';
                req.emit('error', e);
            });
        }
    }
    return req.on('error', clear);
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQzpcXFVzZXJzXFxpZmVkdVxcQXBwRGF0YVxcUm9hbWluZ1xcbnZtXFx2OC40LjBcXG5vZGVfbW9kdWxlc1xcZ2VuZXJhdG9yLXNwZWVkc2VlZFxcbm9kZV9tb2R1bGVzXFx0aW1lZC1vdXRcXGluZGV4LmpzIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXGlmZWR1XFxBcHBEYXRhXFxSb2FtaW5nXFxudm1cXHY4LjQuMFxcbm9kZV9tb2R1bGVzXFxnZW5lcmF0b3Itc3BlZWRzZWVkXFxub2RlX21vZHVsZXNcXHRpbWVkLW91dFxcaW5kZXguanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsWUFBWSxDQUFDO0FBRWIsTUFBTSxDQUFDLE9BQU8sR0FBRyxVQUFVLEdBQUcsRUFBRSxJQUFJO0lBQ25DLEVBQUUsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxZQUFZLENBQUMsQ0FBQyxDQUFDO1FBQ3RCLE1BQU0sQ0FBQyxHQUFHLENBQUM7SUFDWixDQUFDO0lBRUQsSUFBSSxNQUFNLEdBQUcsS0FBSyxDQUFDLElBQUksQ0FBQyxHQUFHLElBQUksR0FBRyxFQUFDLE1BQU0sRUFBRSxJQUFJLEVBQUUsT0FBTyxFQUFFLElBQUksRUFBQyxDQUFDO0lBQ2hFLElBQUksSUFBSSxHQUFHLEdBQUcsQ0FBQyxRQUFRLEdBQUcsQ0FBQyxNQUFNLEdBQUcsR0FBRyxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsR0FBRyxFQUFFLENBQUM7SUFFNUQsRUFBRSxDQUFDLENBQUMsTUFBTSxDQUFDLE9BQU8sS0FBSyxTQUFTLENBQUMsQ0FBQyxDQUFDO1FBQ2xDLEdBQUcsQ0FBQyxZQUFZLEdBQUcsVUFBVSxDQUFDO1lBQzdCLEdBQUcsQ0FBQyxLQUFLLEVBQUUsQ0FBQztZQUNaLElBQUksQ0FBQyxHQUFHLElBQUksS0FBSyxDQUFDLGlDQUFpQyxHQUFHLElBQUksQ0FBQyxDQUFDO1lBQzVELENBQUMsQ0FBQyxJQUFJLEdBQUcsV0FBVyxDQUFDO1lBQ3JCLEdBQUcsQ0FBQyxJQUFJLENBQUMsT0FBTyxFQUFFLENBQUMsQ0FBQyxDQUFDO1FBQ3RCLENBQUMsRUFBRSxNQUFNLENBQUMsT0FBTyxDQUFDLENBQUM7SUFDcEIsQ0FBQztJQUVELHNFQUFzRTtJQUN0RSw0QkFBNEI7SUFDNUIsR0FBRyxDQUFDLEVBQUUsQ0FBQyxRQUFRLEVBQUUsZ0JBQWdCLE1BQU07UUFDdEMsZ0VBQWdFO1FBQ2hFLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsVUFBVSxJQUFJLE1BQU0sQ0FBQyxXQUFXLENBQUMsQ0FBQyxDQUFDLENBQUM7WUFDaEQsT0FBTyxFQUFFLENBQUM7WUFDVixNQUFNLENBQUM7UUFDUixDQUFDO1FBRUQsTUFBTSxDQUFDLElBQUksQ0FBQyxTQUFTLEVBQUUsT0FBTyxDQUFDLENBQUM7SUFDakMsQ0FBQyxDQUFDLENBQUM7SUFFSDtRQUNDLEVBQUUsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxZQUFZLENBQUMsQ0FBQyxDQUFDO1lBQ3RCLFlBQVksQ0FBQyxHQUFHLENBQUMsWUFBWSxDQUFDLENBQUM7WUFDL0IsR0FBRyxDQUFDLFlBQVksR0FBRyxJQUFJLENBQUM7UUFDekIsQ0FBQztJQUNGLENBQUM7SUFFRDtRQUNDLEtBQUssRUFBRSxDQUFDO1FBRVIsRUFBRSxDQUFDLENBQUMsTUFBTSxDQUFDLE1BQU0sS0FBSyxTQUFTLENBQUMsQ0FBQyxDQUFDO1lBQ2pDLG1FQUFtRTtZQUNuRSxxQ0FBcUM7WUFDckMsR0FBRyxDQUFDLFVBQVUsQ0FBQyxNQUFNLENBQUMsTUFBTSxFQUFFO2dCQUM3QixHQUFHLENBQUMsS0FBSyxFQUFFLENBQUM7Z0JBQ1osSUFBSSxDQUFDLEdBQUcsSUFBSSxLQUFLLENBQUMsNkJBQTZCLEdBQUcsSUFBSSxDQUFDLENBQUM7Z0JBQ3hELENBQUMsQ0FBQyxJQUFJLEdBQUcsaUJBQWlCLENBQUM7Z0JBQzNCLEdBQUcsQ0FBQyxJQUFJLENBQUMsT0FBTyxFQUFFLENBQUMsQ0FBQyxDQUFDO1lBQ3RCLENBQUMsQ0FBQyxDQUFDO1FBQ0osQ0FBQztJQUNGLENBQUM7SUFFRCxNQUFNLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxPQUFPLEVBQUUsS0FBSyxDQUFDLENBQUM7QUFDL0IsQ0FBQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChyZXEsIHRpbWUpIHtcblx0aWYgKHJlcS50aW1lb3V0VGltZXIpIHtcblx0XHRyZXR1cm4gcmVxO1xuXHR9XG5cblx0dmFyIGRlbGF5cyA9IGlzTmFOKHRpbWUpID8gdGltZSA6IHtzb2NrZXQ6IHRpbWUsIGNvbm5lY3Q6IHRpbWV9O1xuXHR2YXIgaG9zdCA9IHJlcS5faGVhZGVycyA/ICgnIHRvICcgKyByZXEuX2hlYWRlcnMuaG9zdCkgOiAnJztcblxuXHRpZiAoZGVsYXlzLmNvbm5lY3QgIT09IHVuZGVmaW5lZCkge1xuXHRcdHJlcS50aW1lb3V0VGltZXIgPSBzZXRUaW1lb3V0KGZ1bmN0aW9uIHRpbWVvdXRIYW5kbGVyKCkge1xuXHRcdFx0cmVxLmFib3J0KCk7XG5cdFx0XHR2YXIgZSA9IG5ldyBFcnJvcignQ29ubmVjdGlvbiB0aW1lZCBvdXQgb24gcmVxdWVzdCcgKyBob3N0KTtcblx0XHRcdGUuY29kZSA9ICdFVElNRURPVVQnO1xuXHRcdFx0cmVxLmVtaXQoJ2Vycm9yJywgZSk7XG5cdFx0fSwgZGVsYXlzLmNvbm5lY3QpO1xuXHR9XG5cblx0Ly8gQ2xlYXIgdGhlIGNvbm5lY3Rpb24gdGltZW91dCB0aW1lciBvbmNlIGEgc29ja2V0IGlzIGFzc2lnbmVkIHRvIHRoZVxuXHQvLyByZXF1ZXN0IGFuZCBpcyBjb25uZWN0ZWQuXG5cdHJlcS5vbignc29ja2V0JywgZnVuY3Rpb24gYXNzaWduKHNvY2tldCkge1xuXHRcdC8vIFNvY2tldCBtYXkgY29tZSBmcm9tIEFnZW50IHBvb2wgYW5kIG1heSBiZSBhbHJlYWR5IGNvbm5lY3RlZC5cblx0XHRpZiAoIShzb2NrZXQuY29ubmVjdGluZyB8fCBzb2NrZXQuX2Nvbm5lY3RpbmcpKSB7XG5cdFx0XHRjb25uZWN0KCk7XG5cdFx0XHRyZXR1cm47XG5cdFx0fVxuXG5cdFx0c29ja2V0Lm9uY2UoJ2Nvbm5lY3QnLCBjb25uZWN0KTtcblx0fSk7XG5cblx0ZnVuY3Rpb24gY2xlYXIoKSB7XG5cdFx0aWYgKHJlcS50aW1lb3V0VGltZXIpIHtcblx0XHRcdGNsZWFyVGltZW91dChyZXEudGltZW91dFRpbWVyKTtcblx0XHRcdHJlcS50aW1lb3V0VGltZXIgPSBudWxsO1xuXHRcdH1cblx0fVxuXG5cdGZ1bmN0aW9uIGNvbm5lY3QoKSB7XG5cdFx0Y2xlYXIoKTtcblxuXHRcdGlmIChkZWxheXMuc29ja2V0ICE9PSB1bmRlZmluZWQpIHtcblx0XHRcdC8vIEFib3J0IHRoZSByZXF1ZXN0IGlmIHRoZXJlIGlzIG5vIGFjdGl2aXR5IG9uIHRoZSBzb2NrZXQgZm9yIG1vcmVcblx0XHRcdC8vIHRoYW4gYGRlbGF5cy5zb2NrZXRgIG1pbGxpc2Vjb25kcy5cblx0XHRcdHJlcS5zZXRUaW1lb3V0KGRlbGF5cy5zb2NrZXQsIGZ1bmN0aW9uIHNvY2tldFRpbWVvdXRIYW5kbGVyKCkge1xuXHRcdFx0XHRyZXEuYWJvcnQoKTtcblx0XHRcdFx0dmFyIGUgPSBuZXcgRXJyb3IoJ1NvY2tldCB0aW1lZCBvdXQgb24gcmVxdWVzdCcgKyBob3N0KTtcblx0XHRcdFx0ZS5jb2RlID0gJ0VTT0NLRVRUSU1FRE9VVCc7XG5cdFx0XHRcdHJlcS5lbWl0KCdlcnJvcicsIGUpO1xuXHRcdFx0fSk7XG5cdFx0fVxuXHR9XG5cblx0cmV0dXJuIHJlcS5vbignZXJyb3InLCBjbGVhcik7XG59O1xuIl19