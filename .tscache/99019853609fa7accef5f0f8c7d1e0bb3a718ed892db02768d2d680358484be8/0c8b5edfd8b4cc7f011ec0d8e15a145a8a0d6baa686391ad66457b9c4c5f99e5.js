// Generated by CoffeeScript 1.11.1
/*
  ExternalEditor
  Kevin Gravier <kevin@mrkmg.com>
  MIT
 */
(function () {
    var CreateFileError, extend = function (child, parent) { for (var key in parent) {
        if (hasProp.call(parent, key))
            child[key] = parent[key];
    } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; }, hasProp = {}.hasOwnProperty;
    CreateFileError = (function (superClass) {
        extend(CreateFileError, superClass);
        CreateFileError.prototype.message = 'Failed to create temporary file for editor';
        function CreateFileError(original_error) {
            this.original_error = original_error;
        }
        return CreateFileError;
    })(Error);
    module.exports = CreateFileError;
}).call(this);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQzpcXFVzZXJzXFxpZmVkdVxcQXBwRGF0YVxcUm9hbWluZ1xcbnZtXFx2OC40LjBcXG5vZGVfbW9kdWxlc1xcZ2VuZXJhdG9yLXNwZWVkc2VlZFxcbm9kZV9tb2R1bGVzXFxleHRlcm5hbC1lZGl0b3JcXG1haW5cXGVycm9yc1xcQ3JlYXRlRmlsZUVycm9yLmpzIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXGlmZWR1XFxBcHBEYXRhXFxSb2FtaW5nXFxudm1cXHY4LjQuMFxcbm9kZV9tb2R1bGVzXFxnZW5lcmF0b3Itc3BlZWRzZWVkXFxub2RlX21vZHVsZXNcXGV4dGVybmFsLWVkaXRvclxcbWFpblxcZXJyb3JzXFxDcmVhdGVGaWxlRXJyb3IuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsbUNBQW1DO0FBRW5DOzs7O0dBSUc7QUFFSCxDQUFDO0lBQ0MsSUFBSSxlQUFlLEVBQ2pCLE1BQU0sR0FBRyxVQUFTLEtBQUssRUFBRSxNQUFNLElBQUksR0FBRyxDQUFDLENBQUMsSUFBSSxHQUFHLElBQUksTUFBTSxDQUFDLENBQUMsQ0FBQztRQUFDLEVBQUUsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsTUFBTSxFQUFFLEdBQUcsQ0FBQyxDQUFDO1lBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxHQUFHLE1BQU0sQ0FBQyxHQUFHLENBQUMsQ0FBQztJQUFDLENBQUMsQ0FBQyxrQkFBa0IsSUFBSSxDQUFDLFdBQVcsR0FBRyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLFNBQVMsR0FBRyxNQUFNLENBQUMsU0FBUyxDQUFDLENBQUMsS0FBSyxDQUFDLFNBQVMsR0FBRyxJQUFJLElBQUksRUFBRSxDQUFDLENBQUMsS0FBSyxDQUFDLFNBQVMsR0FBRyxNQUFNLENBQUMsU0FBUyxDQUFDLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsRUFDMVIsT0FBTyxHQUFHLEVBQUUsQ0FBQyxjQUFjLENBQUM7SUFFOUIsZUFBZSxHQUFHLENBQUMsVUFBUyxVQUFVO1FBQ3BDLE1BQU0sQ0FBQyxlQUFlLEVBQUUsVUFBVSxDQUFDLENBQUM7UUFFcEMsZUFBZSxDQUFDLFNBQVMsQ0FBQyxPQUFPLEdBQUcsNENBQTRDLENBQUM7UUFFakYseUJBQXlCLGNBQWM7WUFDckMsSUFBSSxDQUFDLGNBQWMsR0FBRyxjQUFjLENBQUM7UUFDdkMsQ0FBQztRQUVELE1BQU0sQ0FBQyxlQUFlLENBQUM7SUFFekIsQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDLENBQUM7SUFFVixNQUFNLENBQUMsT0FBTyxHQUFHLGVBQWUsQ0FBQztBQUVuQyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBHZW5lcmF0ZWQgYnkgQ29mZmVlU2NyaXB0IDEuMTEuMVxuXG4vKlxuICBFeHRlcm5hbEVkaXRvclxuICBLZXZpbiBHcmF2aWVyIDxrZXZpbkBtcmttZy5jb20+XG4gIE1JVFxuICovXG5cbihmdW5jdGlvbigpIHtcbiAgdmFyIENyZWF0ZUZpbGVFcnJvcixcbiAgICBleHRlbmQgPSBmdW5jdGlvbihjaGlsZCwgcGFyZW50KSB7IGZvciAodmFyIGtleSBpbiBwYXJlbnQpIHsgaWYgKGhhc1Byb3AuY2FsbChwYXJlbnQsIGtleSkpIGNoaWxkW2tleV0gPSBwYXJlbnRba2V5XTsgfSBmdW5jdGlvbiBjdG9yKCkgeyB0aGlzLmNvbnN0cnVjdG9yID0gY2hpbGQ7IH0gY3Rvci5wcm90b3R5cGUgPSBwYXJlbnQucHJvdG90eXBlOyBjaGlsZC5wcm90b3R5cGUgPSBuZXcgY3RvcigpOyBjaGlsZC5fX3N1cGVyX18gPSBwYXJlbnQucHJvdG90eXBlOyByZXR1cm4gY2hpbGQ7IH0sXG4gICAgaGFzUHJvcCA9IHt9Lmhhc093blByb3BlcnR5O1xuXG4gIENyZWF0ZUZpbGVFcnJvciA9IChmdW5jdGlvbihzdXBlckNsYXNzKSB7XG4gICAgZXh0ZW5kKENyZWF0ZUZpbGVFcnJvciwgc3VwZXJDbGFzcyk7XG5cbiAgICBDcmVhdGVGaWxlRXJyb3IucHJvdG90eXBlLm1lc3NhZ2UgPSAnRmFpbGVkIHRvIGNyZWF0ZSB0ZW1wb3JhcnkgZmlsZSBmb3IgZWRpdG9yJztcblxuICAgIGZ1bmN0aW9uIENyZWF0ZUZpbGVFcnJvcihvcmlnaW5hbF9lcnJvcikge1xuICAgICAgdGhpcy5vcmlnaW5hbF9lcnJvciA9IG9yaWdpbmFsX2Vycm9yO1xuICAgIH1cblxuICAgIHJldHVybiBDcmVhdGVGaWxlRXJyb3I7XG5cbiAgfSkoRXJyb3IpO1xuXG4gIG1vZHVsZS5leHBvcnRzID0gQ3JlYXRlRmlsZUVycm9yO1xuXG59KS5jYWxsKHRoaXMpO1xuIl19