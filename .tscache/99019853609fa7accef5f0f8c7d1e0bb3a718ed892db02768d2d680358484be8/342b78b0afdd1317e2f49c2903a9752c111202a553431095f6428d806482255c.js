'use strict';
var path = require('path');
var locatePath = require('locate-path');
module.exports = function (filename, opts) {
    opts = opts || {};
    var startDir = path.resolve(opts.cwd || '');
    var root = path.parse(startDir).root;
    var filenames = [].concat(filename);
    return new Promise(function (resolve) {
        (function find(dir) {
            locatePath(filenames, { cwd: dir }).then(function (file) {
                if (file) {
                    resolve(path.join(dir, file));
                }
                else if (dir === root) {
                    resolve(null);
                }
                else {
                    find(path.dirname(dir));
                }
            });
        })(startDir);
    });
};
module.exports.sync = function (filename, opts) {
    opts = opts || {};
    var dir = path.resolve(opts.cwd || '');
    var root = path.parse(dir).root;
    var filenames = [].concat(filename);
    // eslint-disable-next-line no-constant-condition
    while (true) {
        var file = locatePath.sync(filenames, { cwd: dir });
        if (file) {
            return path.join(dir, file);
        }
        else if (dir === root) {
            return null;
        }
        dir = path.dirname(dir);
    }
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQzpcXFVzZXJzXFxpZmVkdVxcQXBwRGF0YVxcUm9hbWluZ1xcbnZtXFx2OC40LjBcXG5vZGVfbW9kdWxlc1xcZ2VuZXJhdG9yLXNwZWVkc2VlZFxcbm9kZV9tb2R1bGVzXFxmaW5kLXVwXFxpbmRleC5qcyIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxpZmVkdVxcQXBwRGF0YVxcUm9hbWluZ1xcbnZtXFx2OC40LjBcXG5vZGVfbW9kdWxlc1xcZ2VuZXJhdG9yLXNwZWVkc2VlZFxcbm9kZV9tb2R1bGVzXFxmaW5kLXVwXFxpbmRleC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxZQUFZLENBQUM7QUFDYixJQUFNLElBQUksR0FBRyxPQUFPLENBQUMsTUFBTSxDQUFDLENBQUM7QUFDN0IsSUFBTSxVQUFVLEdBQUcsT0FBTyxDQUFDLGFBQWEsQ0FBQyxDQUFDO0FBRTFDLE1BQU0sQ0FBQyxPQUFPLEdBQUcsVUFBQyxRQUFRLEVBQUUsSUFBSTtJQUMvQixJQUFJLEdBQUcsSUFBSSxJQUFJLEVBQUUsQ0FBQztJQUVsQixJQUFNLFFBQVEsR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxHQUFHLElBQUksRUFBRSxDQUFDLENBQUM7SUFDOUMsSUFBTSxJQUFJLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxRQUFRLENBQUMsQ0FBQyxJQUFJLENBQUM7SUFFdkMsSUFBTSxTQUFTLEdBQUcsRUFBRSxDQUFDLE1BQU0sQ0FBQyxRQUFRLENBQUMsQ0FBQztJQUV0QyxNQUFNLENBQUMsSUFBSSxPQUFPLENBQUMsVUFBQSxPQUFPO1FBQ3pCLENBQUMsY0FBYyxHQUFHO1lBQ2pCLFVBQVUsQ0FBQyxTQUFTLEVBQUUsRUFBQyxHQUFHLEVBQUUsR0FBRyxFQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsVUFBQSxJQUFJO2dCQUMxQyxFQUFFLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDO29CQUNWLE9BQU8sQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLEdBQUcsRUFBRSxJQUFJLENBQUMsQ0FBQyxDQUFDO2dCQUMvQixDQUFDO2dCQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsQ0FBQyxHQUFHLEtBQUssSUFBSSxDQUFDLENBQUMsQ0FBQztvQkFDekIsT0FBTyxDQUFDLElBQUksQ0FBQyxDQUFDO2dCQUNmLENBQUM7Z0JBQUMsSUFBSSxDQUFDLENBQUM7b0JBQ1AsSUFBSSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQztnQkFDekIsQ0FBQztZQUNGLENBQUMsQ0FBQyxDQUFDO1FBQ0osQ0FBQyxDQUFDLENBQUMsUUFBUSxDQUFDLENBQUM7SUFDZCxDQUFDLENBQUMsQ0FBQztBQUNKLENBQUMsQ0FBQztBQUVGLE1BQU0sQ0FBQyxPQUFPLENBQUMsSUFBSSxHQUFHLFVBQUMsUUFBUSxFQUFFLElBQUk7SUFDcEMsSUFBSSxHQUFHLElBQUksSUFBSSxFQUFFLENBQUM7SUFFbEIsSUFBSSxHQUFHLEdBQUcsSUFBSSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsR0FBRyxJQUFJLEVBQUUsQ0FBQyxDQUFDO0lBQ3ZDLElBQU0sSUFBSSxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLENBQUMsSUFBSSxDQUFDO0lBRWxDLElBQU0sU0FBUyxHQUFHLEVBQUUsQ0FBQyxNQUFNLENBQUMsUUFBUSxDQUFDLENBQUM7SUFFdEMsaURBQWlEO0lBQ2pELE9BQU8sSUFBSSxFQUFFLENBQUM7UUFDYixJQUFNLElBQUksR0FBRyxVQUFVLENBQUMsSUFBSSxDQUFDLFNBQVMsRUFBRSxFQUFDLEdBQUcsRUFBRSxHQUFHLEVBQUMsQ0FBQyxDQUFDO1FBRXBELEVBQUUsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUM7WUFDVixNQUFNLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxHQUFHLEVBQUUsSUFBSSxDQUFDLENBQUM7UUFDN0IsQ0FBQztRQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsQ0FBQyxHQUFHLEtBQUssSUFBSSxDQUFDLENBQUMsQ0FBQztZQUN6QixNQUFNLENBQUMsSUFBSSxDQUFDO1FBQ2IsQ0FBQztRQUVELEdBQUcsR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBQ3pCLENBQUM7QUFDRixDQUFDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5jb25zdCBwYXRoID0gcmVxdWlyZSgncGF0aCcpO1xuY29uc3QgbG9jYXRlUGF0aCA9IHJlcXVpcmUoJ2xvY2F0ZS1wYXRoJyk7XG5cbm1vZHVsZS5leHBvcnRzID0gKGZpbGVuYW1lLCBvcHRzKSA9PiB7XG5cdG9wdHMgPSBvcHRzIHx8IHt9O1xuXG5cdGNvbnN0IHN0YXJ0RGlyID0gcGF0aC5yZXNvbHZlKG9wdHMuY3dkIHx8ICcnKTtcblx0Y29uc3Qgcm9vdCA9IHBhdGgucGFyc2Uoc3RhcnREaXIpLnJvb3Q7XG5cblx0Y29uc3QgZmlsZW5hbWVzID0gW10uY29uY2F0KGZpbGVuYW1lKTtcblxuXHRyZXR1cm4gbmV3IFByb21pc2UocmVzb2x2ZSA9PiB7XG5cdFx0KGZ1bmN0aW9uIGZpbmQoZGlyKSB7XG5cdFx0XHRsb2NhdGVQYXRoKGZpbGVuYW1lcywge2N3ZDogZGlyfSkudGhlbihmaWxlID0+IHtcblx0XHRcdFx0aWYgKGZpbGUpIHtcblx0XHRcdFx0XHRyZXNvbHZlKHBhdGguam9pbihkaXIsIGZpbGUpKTtcblx0XHRcdFx0fSBlbHNlIGlmIChkaXIgPT09IHJvb3QpIHtcblx0XHRcdFx0XHRyZXNvbHZlKG51bGwpO1xuXHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdGZpbmQocGF0aC5kaXJuYW1lKGRpcikpO1xuXHRcdFx0XHR9XG5cdFx0XHR9KTtcblx0XHR9KShzdGFydERpcik7XG5cdH0pO1xufTtcblxubW9kdWxlLmV4cG9ydHMuc3luYyA9IChmaWxlbmFtZSwgb3B0cykgPT4ge1xuXHRvcHRzID0gb3B0cyB8fCB7fTtcblxuXHRsZXQgZGlyID0gcGF0aC5yZXNvbHZlKG9wdHMuY3dkIHx8ICcnKTtcblx0Y29uc3Qgcm9vdCA9IHBhdGgucGFyc2UoZGlyKS5yb290O1xuXG5cdGNvbnN0IGZpbGVuYW1lcyA9IFtdLmNvbmNhdChmaWxlbmFtZSk7XG5cblx0Ly8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLWNvbnN0YW50LWNvbmRpdGlvblxuXHR3aGlsZSAodHJ1ZSkge1xuXHRcdGNvbnN0IGZpbGUgPSBsb2NhdGVQYXRoLnN5bmMoZmlsZW5hbWVzLCB7Y3dkOiBkaXJ9KTtcblxuXHRcdGlmIChmaWxlKSB7XG5cdFx0XHRyZXR1cm4gcGF0aC5qb2luKGRpciwgZmlsZSk7XG5cdFx0fSBlbHNlIGlmIChkaXIgPT09IHJvb3QpIHtcblx0XHRcdHJldHVybiBudWxsO1xuXHRcdH1cblxuXHRcdGRpciA9IHBhdGguZGlybmFtZShkaXIpO1xuXHR9XG59O1xuIl19