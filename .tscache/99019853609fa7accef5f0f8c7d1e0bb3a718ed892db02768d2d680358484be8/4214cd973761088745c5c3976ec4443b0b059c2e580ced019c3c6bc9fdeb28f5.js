/*istanbul ignore start*/ 'use strict';
exports.__esModule = true;
exports.characterDiff = undefined;
exports.diffChars = diffChars;
var /*istanbul ignore start*/ _base = require('./base') /*istanbul ignore end*/;
/*istanbul ignore start*/
var _base2 = _interopRequireDefault(_base);
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
/*istanbul ignore end*/ var characterDiff = exports.characterDiff = new _base2.default() /*istanbul ignore end*/;
function diffChars(oldStr, newStr, callback) {
    return characterDiff.diff(oldStr, newStr, callback);
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQzpcXFVzZXJzXFxpZmVkdVxcQXBwRGF0YVxcUm9hbWluZ1xcbnZtXFx2OC40LjBcXG5vZGVfbW9kdWxlc1xcZ2VuZXJhdG9yLXNwZWVkc2VlZFxcbm9kZV9tb2R1bGVzXFx5ZW9tYW4tZW52aXJvbm1lbnRcXG5vZGVfbW9kdWxlc1xcZGlmZlxcbGliXFxkaWZmXFxjaGFyYWN0ZXIuanMiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcaWZlZHVcXEFwcERhdGFcXFJvYW1pbmdcXG52bVxcdjguNC4wXFxub2RlX21vZHVsZXNcXGdlbmVyYXRvci1zcGVlZHNlZWRcXG5vZGVfbW9kdWxlc1xceWVvbWFuLWVudmlyb25tZW50XFxub2RlX21vZHVsZXNcXGRpZmZcXGxpYlxcZGlmZlxcY2hhcmFjdGVyLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLHlCQUF5QixDQUFBLFlBQVksQ0FBQztBQUV0QyxPQUFPLENBQUMsVUFBVSxHQUFHLElBQUksQ0FBQztBQUMxQixPQUFPLENBQUMsYUFBYSxHQUFHLFNBQVMsQ0FBQztBQUNsQyxPQUFPLENBQXlCLFNBQVMsR0FBRyxTQUFTLENBQUM7QUFFdEQsSUFBSSx5QkFBeUIsQ0FBQSxLQUFLLEdBQUcsT0FBTyxDQUFDLFFBQVEsQ0FBQyxDQUFDLHVCQUF1QixDQUFDO0FBRS9FLHlCQUF5QjtBQUN6QixJQUFJLE1BQU0sR0FBRyxzQkFBc0IsQ0FBQyxLQUFLLENBQUMsQ0FBQztBQUUzQyxnQ0FBZ0MsR0FBRyxJQUFJLE1BQU0sQ0FBQyxHQUFHLElBQUksR0FBRyxDQUFDLFVBQVUsR0FBRyxHQUFHLEdBQUcsRUFBRSxPQUFPLEVBQUUsR0FBRyxFQUFFLENBQUMsQ0FBQyxDQUFDO0FBRS9GLHVCQUF1QixDQUFBLElBQUksYUFBYSxHQUE0QixPQUFPLENBQXlCLGFBQWEsR0FBRyxJQUE2QixNQUFNLENBQUMsT0FBTyxFQUFFLENBQUMsdUJBQXVCLENBQUM7QUFDMUwsbUJBQW1CLE1BQU0sRUFBRSxNQUFNLEVBQUUsUUFBUTtJQUN6QyxNQUFNLENBQUMsYUFBYSxDQUFDLElBQUksQ0FBQyxNQUFNLEVBQUUsTUFBTSxFQUFFLFFBQVEsQ0FBQyxDQUFDO0FBQ3RELENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKmlzdGFuYnVsIGlnbm9yZSBzdGFydCovJ3VzZSBzdHJpY3QnO1xuXG5leHBvcnRzLl9fZXNNb2R1bGUgPSB0cnVlO1xuZXhwb3J0cy5jaGFyYWN0ZXJEaWZmID0gdW5kZWZpbmVkO1xuZXhwb3J0cy4gLyppc3RhbmJ1bCBpZ25vcmUgZW5kKi9kaWZmQ2hhcnMgPSBkaWZmQ2hhcnM7XG5cbnZhciAvKmlzdGFuYnVsIGlnbm9yZSBzdGFydCovX2Jhc2UgPSByZXF1aXJlKCcuL2Jhc2UnKSAvKmlzdGFuYnVsIGlnbm9yZSBlbmQqLztcblxuLyppc3RhbmJ1bCBpZ25vcmUgc3RhcnQqL1xudmFyIF9iYXNlMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX2Jhc2UpO1xuXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTsgfVxuXG4vKmlzdGFuYnVsIGlnbm9yZSBlbmQqL3ZhciBjaGFyYWN0ZXJEaWZmID0gLyppc3RhbmJ1bCBpZ25vcmUgc3RhcnQqL2V4cG9ydHMuIC8qaXN0YW5idWwgaWdub3JlIGVuZCovY2hhcmFjdGVyRGlmZiA9IG5ldyAvKmlzdGFuYnVsIGlnbm9yZSBzdGFydCovX2Jhc2UyLmRlZmF1bHQoKSAvKmlzdGFuYnVsIGlnbm9yZSBlbmQqLztcbmZ1bmN0aW9uIGRpZmZDaGFycyhvbGRTdHIsIG5ld1N0ciwgY2FsbGJhY2spIHtcbiAgcmV0dXJuIGNoYXJhY3RlckRpZmYuZGlmZihvbGRTdHIsIG5ld1N0ciwgY2FsbGJhY2spO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2Jhc2U2NCxleUoyWlhKemFXOXVJam96TENKemIzVnlZMlZ6SWpwYklpNHVMeTR1TDNOeVl5OWthV1ptTDJOb1lYSmhZM1JsY2k1cWN5SmRMQ0p1WVcxbGN5STZXMTBzSW0xaGNIQnBibWR6SWpvaU96czdPMmREUVVkblFqczdRVUZJYUVJN096czdPenM3ZFVKQlJVOHNTVUZCVFN4NVJrRkJaMElzY1VWQlFXaENPMEZCUTA0c1UwRkJVeXhUUVVGVUxFTkJRVzFDTEUxQlFXNUNMRVZCUVRKQ0xFMUJRVE5DTEVWQlFXMURMRkZCUVc1RExFVkJRVFpETzBGQlFVVXNVMEZCVHl4alFVRmpMRWxCUVdRc1EwRkJiVUlzVFVGQmJrSXNSVUZCTWtJc1RVRkJNMElzUlVGQmJVTXNVVUZCYmtNc1EwRkJVQ3hEUVVGR08wTkJRVGRESWl3aVptbHNaU0k2SW1Ob1lYSmhZM1JsY2k1cWN5SXNJbk52ZFhKalpYTkRiMjUwWlc1MElqcGJJbWx0Y0c5eWRDQkVhV1ptSUdaeWIyMGdKeTR2WW1GelpTYzdYRzVjYm1WNGNHOXlkQ0JqYjI1emRDQmphR0Z5WVdOMFpYSkVhV1ptSUQwZ2JtVjNJRVJwWm1Zb0tUdGNibVY0Y0c5eWRDQm1kVzVqZEdsdmJpQmthV1ptUTJoaGNuTW9iMnhrVTNSeUxDQnVaWGRUZEhJc0lHTmhiR3hpWVdOcktTQjdJSEpsZEhWeWJpQmphR0Z5WVdOMFpYSkVhV1ptTG1ScFptWW9iMnhrVTNSeUxDQnVaWGRUZEhJc0lHTmhiR3hpWVdOcktUc2dmVnh1SWwxOVxuIl19