'use strict';
var rx = require('rx');
function normalizeKeypressEvents(value, key) {
    return { value: value, key: key || {} };
}
module.exports = function (rl) {
    var keypress = rx.Observable.fromEvent(rl.input, 'keypress', normalizeKeypressEvents)
        .filter(function (e) {
        // Ignore `enter` key. On the readline, we only care about the `line` event.
        return e.key.name !== 'enter' && e.key.name !== 'return';
    });
    return {
        line: rx.Observable.fromEvent(rl, 'line'),
        keypress: keypress,
        normalizedUpKey: keypress.filter(function (e) {
            return e.key.name === 'up' || e.key.name === 'k' || (e.key.name === 'p' && e.key.ctrl);
        }).share(),
        normalizedDownKey: keypress.filter(function (e) {
            return e.key.name === 'down' || e.key.name === 'j' || (e.key.name === 'n' && e.key.ctrl);
        }).share(),
        numberKey: keypress.filter(function (e) {
            return e.value && '123456789'.indexOf(e.value) >= 0;
        }).map(function (e) {
            return Number(e.value);
        }).share(),
        spaceKey: keypress.filter(function (e) {
            return e.key && e.key.name === 'space';
        }).share(),
        aKey: keypress.filter(function (e) {
            return e.key && e.key.name === 'a';
        }).share(),
        iKey: keypress.filter(function (e) {
            return e.key && e.key.name === 'i';
        }).share()
    };
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQzpcXFVzZXJzXFxpZmVkdVxcQXBwRGF0YVxcUm9hbWluZ1xcbnZtXFx2OC40LjBcXG5vZGVfbW9kdWxlc1xcZ2VuZXJhdG9yLXNwZWVkc2VlZFxcbm9kZV9tb2R1bGVzXFxpbnF1aXJlclxcbGliXFx1dGlsc1xcZXZlbnRzLmpzIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXGlmZWR1XFxBcHBEYXRhXFxSb2FtaW5nXFxudm1cXHY4LjQuMFxcbm9kZV9tb2R1bGVzXFxnZW5lcmF0b3Itc3BlZWRzZWVkXFxub2RlX21vZHVsZXNcXGlucXVpcmVyXFxsaWJcXHV0aWxzXFxldmVudHMuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsWUFBWSxDQUFDO0FBQ2IsSUFBSSxFQUFFLEdBQUcsT0FBTyxDQUFDLElBQUksQ0FBQyxDQUFDO0FBRXZCLGlDQUFpQyxLQUFLLEVBQUUsR0FBRztJQUN6QyxNQUFNLENBQUMsRUFBQyxLQUFLLEVBQUUsS0FBSyxFQUFFLEdBQUcsRUFBRSxHQUFHLElBQUksRUFBRSxFQUFDLENBQUM7QUFDeEMsQ0FBQztBQUVELE1BQU0sQ0FBQyxPQUFPLEdBQUcsVUFBVSxFQUFFO0lBQzNCLElBQUksUUFBUSxHQUFHLEVBQUUsQ0FBQyxVQUFVLENBQUMsU0FBUyxDQUFDLEVBQUUsQ0FBQyxLQUFLLEVBQUUsVUFBVSxFQUFFLHVCQUF1QixDQUFDO1NBQ2xGLE1BQU0sQ0FBQyxVQUFVLENBQUM7UUFDakIsNEVBQTRFO1FBQzVFLE1BQU0sQ0FBQyxDQUFDLENBQUMsR0FBRyxDQUFDLElBQUksS0FBSyxPQUFPLElBQUksQ0FBQyxDQUFDLEdBQUcsQ0FBQyxJQUFJLEtBQUssUUFBUSxDQUFDO0lBQzNELENBQUMsQ0FBQyxDQUFDO0lBRUwsTUFBTSxDQUFDO1FBQ0wsSUFBSSxFQUFFLEVBQUUsQ0FBQyxVQUFVLENBQUMsU0FBUyxDQUFDLEVBQUUsRUFBRSxNQUFNLENBQUM7UUFDekMsUUFBUSxFQUFFLFFBQVE7UUFFbEIsZUFBZSxFQUFFLFFBQVEsQ0FBQyxNQUFNLENBQUMsVUFBVSxDQUFDO1lBQzFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsR0FBRyxDQUFDLElBQUksS0FBSyxJQUFJLElBQUksQ0FBQyxDQUFDLEdBQUcsQ0FBQyxJQUFJLEtBQUssR0FBRyxJQUFJLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxJQUFJLEtBQUssR0FBRyxJQUFJLENBQUMsQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDekYsQ0FBQyxDQUFDLENBQUMsS0FBSyxFQUFFO1FBRVYsaUJBQWlCLEVBQUUsUUFBUSxDQUFDLE1BQU0sQ0FBQyxVQUFVLENBQUM7WUFDNUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxHQUFHLENBQUMsSUFBSSxLQUFLLE1BQU0sSUFBSSxDQUFDLENBQUMsR0FBRyxDQUFDLElBQUksS0FBSyxHQUFHLElBQUksQ0FBQyxDQUFDLENBQUMsR0FBRyxDQUFDLElBQUksS0FBSyxHQUFHLElBQUksQ0FBQyxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUMzRixDQUFDLENBQUMsQ0FBQyxLQUFLLEVBQUU7UUFFVixTQUFTLEVBQUUsUUFBUSxDQUFDLE1BQU0sQ0FBQyxVQUFVLENBQUM7WUFDcEMsTUFBTSxDQUFDLENBQUMsQ0FBQyxLQUFLLElBQUksV0FBVyxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQ3RELENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxVQUFVLENBQUM7WUFDaEIsTUFBTSxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDLENBQUM7UUFDekIsQ0FBQyxDQUFDLENBQUMsS0FBSyxFQUFFO1FBRVYsUUFBUSxFQUFFLFFBQVEsQ0FBQyxNQUFNLENBQUMsVUFBVSxDQUFDO1lBQ25DLE1BQU0sQ0FBQyxDQUFDLENBQUMsR0FBRyxJQUFJLENBQUMsQ0FBQyxHQUFHLENBQUMsSUFBSSxLQUFLLE9BQU8sQ0FBQztRQUN6QyxDQUFDLENBQUMsQ0FBQyxLQUFLLEVBQUU7UUFFVixJQUFJLEVBQUUsUUFBUSxDQUFDLE1BQU0sQ0FBQyxVQUFVLENBQUM7WUFDL0IsTUFBTSxDQUFDLENBQUMsQ0FBQyxHQUFHLElBQUksQ0FBQyxDQUFDLEdBQUcsQ0FBQyxJQUFJLEtBQUssR0FBRyxDQUFDO1FBQ3JDLENBQUMsQ0FBQyxDQUFDLEtBQUssRUFBRTtRQUVWLElBQUksRUFBRSxRQUFRLENBQUMsTUFBTSxDQUFDLFVBQVUsQ0FBQztZQUMvQixNQUFNLENBQUMsQ0FBQyxDQUFDLEdBQUcsSUFBSSxDQUFDLENBQUMsR0FBRyxDQUFDLElBQUksS0FBSyxHQUFHLENBQUM7UUFDckMsQ0FBQyxDQUFDLENBQUMsS0FBSyxFQUFFO0tBQ1gsQ0FBQztBQUNKLENBQUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcbnZhciByeCA9IHJlcXVpcmUoJ3J4Jyk7XG5cbmZ1bmN0aW9uIG5vcm1hbGl6ZUtleXByZXNzRXZlbnRzKHZhbHVlLCBrZXkpIHtcbiAgcmV0dXJuIHt2YWx1ZTogdmFsdWUsIGtleToga2V5IHx8IHt9fTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAocmwpIHtcbiAgdmFyIGtleXByZXNzID0gcnguT2JzZXJ2YWJsZS5mcm9tRXZlbnQocmwuaW5wdXQsICdrZXlwcmVzcycsIG5vcm1hbGl6ZUtleXByZXNzRXZlbnRzKVxuICAgIC5maWx0ZXIoZnVuY3Rpb24gKGUpIHtcbiAgICAgIC8vIElnbm9yZSBgZW50ZXJgIGtleS4gT24gdGhlIHJlYWRsaW5lLCB3ZSBvbmx5IGNhcmUgYWJvdXQgdGhlIGBsaW5lYCBldmVudC5cbiAgICAgIHJldHVybiBlLmtleS5uYW1lICE9PSAnZW50ZXInICYmIGUua2V5Lm5hbWUgIT09ICdyZXR1cm4nO1xuICAgIH0pO1xuXG4gIHJldHVybiB7XG4gICAgbGluZTogcnguT2JzZXJ2YWJsZS5mcm9tRXZlbnQocmwsICdsaW5lJyksXG4gICAga2V5cHJlc3M6IGtleXByZXNzLFxuXG4gICAgbm9ybWFsaXplZFVwS2V5OiBrZXlwcmVzcy5maWx0ZXIoZnVuY3Rpb24gKGUpIHtcbiAgICAgIHJldHVybiBlLmtleS5uYW1lID09PSAndXAnIHx8IGUua2V5Lm5hbWUgPT09ICdrJyB8fCAoZS5rZXkubmFtZSA9PT0gJ3AnICYmIGUua2V5LmN0cmwpO1xuICAgIH0pLnNoYXJlKCksXG5cbiAgICBub3JtYWxpemVkRG93bktleToga2V5cHJlc3MuZmlsdGVyKGZ1bmN0aW9uIChlKSB7XG4gICAgICByZXR1cm4gZS5rZXkubmFtZSA9PT0gJ2Rvd24nIHx8IGUua2V5Lm5hbWUgPT09ICdqJyB8fCAoZS5rZXkubmFtZSA9PT0gJ24nICYmIGUua2V5LmN0cmwpO1xuICAgIH0pLnNoYXJlKCksXG5cbiAgICBudW1iZXJLZXk6IGtleXByZXNzLmZpbHRlcihmdW5jdGlvbiAoZSkge1xuICAgICAgcmV0dXJuIGUudmFsdWUgJiYgJzEyMzQ1Njc4OScuaW5kZXhPZihlLnZhbHVlKSA+PSAwO1xuICAgIH0pLm1hcChmdW5jdGlvbiAoZSkge1xuICAgICAgcmV0dXJuIE51bWJlcihlLnZhbHVlKTtcbiAgICB9KS5zaGFyZSgpLFxuXG4gICAgc3BhY2VLZXk6IGtleXByZXNzLmZpbHRlcihmdW5jdGlvbiAoZSkge1xuICAgICAgcmV0dXJuIGUua2V5ICYmIGUua2V5Lm5hbWUgPT09ICdzcGFjZSc7XG4gICAgfSkuc2hhcmUoKSxcblxuICAgIGFLZXk6IGtleXByZXNzLmZpbHRlcihmdW5jdGlvbiAoZSkge1xuICAgICAgcmV0dXJuIGUua2V5ICYmIGUua2V5Lm5hbWUgPT09ICdhJztcbiAgICB9KS5zaGFyZSgpLFxuXG4gICAgaUtleToga2V5cHJlc3MuZmlsdGVyKGZ1bmN0aW9uIChlKSB7XG4gICAgICByZXR1cm4gZS5rZXkgJiYgZS5rZXkubmFtZSA9PT0gJ2knO1xuICAgIH0pLnNoYXJlKClcbiAgfTtcbn07XG4iXX0=