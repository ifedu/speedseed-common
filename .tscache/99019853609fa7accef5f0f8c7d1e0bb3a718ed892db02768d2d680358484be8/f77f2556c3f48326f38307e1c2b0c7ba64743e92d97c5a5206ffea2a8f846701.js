'use strict';
var chalk = require('chalk');
var figures = require('figures');
/**
 * Separator object
 * Used to space/separate choices group
 * @constructor
 * @param {String} line   Separation line content (facultative)
 */
var Separator = module.exports = function (line) {
    this.type = 'separator';
    this.line = chalk.dim(line || new Array(15).join(figures.line));
};
/**
 * Helper function returning false if object is a separator
 * @param  {Object} obj object to test against
 * @return {Boolean}    `false` if object is a separator
 */
Separator.exclude = function (obj) {
    return obj.type !== 'separator';
};
/**
 * Stringify separator
 * @return {String} the separator display string
 */
Separator.prototype.toString = function () {
    return this.line;
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQzpcXFVzZXJzXFxpZmVkdVxcQXBwRGF0YVxcUm9hbWluZ1xcbnZtXFx2OC40LjBcXG5vZGVfbW9kdWxlc1xcZ2VuZXJhdG9yLXNwZWVkc2VlZFxcbm9kZV9tb2R1bGVzXFxpbnF1aXJlclxcbGliXFxvYmplY3RzXFxzZXBhcmF0b3IuanMiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcaWZlZHVcXEFwcERhdGFcXFJvYW1pbmdcXG52bVxcdjguNC4wXFxub2RlX21vZHVsZXNcXGdlbmVyYXRvci1zcGVlZHNlZWRcXG5vZGVfbW9kdWxlc1xcaW5xdWlyZXJcXGxpYlxcb2JqZWN0c1xcc2VwYXJhdG9yLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLFlBQVksQ0FBQztBQUNiLElBQUksS0FBSyxHQUFHLE9BQU8sQ0FBQyxPQUFPLENBQUMsQ0FBQztBQUM3QixJQUFJLE9BQU8sR0FBRyxPQUFPLENBQUMsU0FBUyxDQUFDLENBQUM7QUFFakM7Ozs7O0dBS0c7QUFFSCxJQUFJLFNBQVMsR0FBRyxNQUFNLENBQUMsT0FBTyxHQUFHLFVBQVUsSUFBSTtJQUM3QyxJQUFJLENBQUMsSUFBSSxHQUFHLFdBQVcsQ0FBQztJQUN4QixJQUFJLENBQUMsSUFBSSxHQUFHLEtBQUssQ0FBQyxHQUFHLENBQUMsSUFBSSxJQUFJLElBQUksS0FBSyxDQUFDLEVBQUUsQ0FBQyxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQztBQUNsRSxDQUFDLENBQUM7QUFFRjs7OztHQUlHO0FBRUgsU0FBUyxDQUFDLE9BQU8sR0FBRyxVQUFVLEdBQUc7SUFDL0IsTUFBTSxDQUFDLEdBQUcsQ0FBQyxJQUFJLEtBQUssV0FBVyxDQUFDO0FBQ2xDLENBQUMsQ0FBQztBQUVGOzs7R0FHRztBQUVILFNBQVMsQ0FBQyxTQUFTLENBQUMsUUFBUSxHQUFHO0lBQzdCLE1BQU0sQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDO0FBQ25CLENBQUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcbnZhciBjaGFsayA9IHJlcXVpcmUoJ2NoYWxrJyk7XG52YXIgZmlndXJlcyA9IHJlcXVpcmUoJ2ZpZ3VyZXMnKTtcblxuLyoqXG4gKiBTZXBhcmF0b3Igb2JqZWN0XG4gKiBVc2VkIHRvIHNwYWNlL3NlcGFyYXRlIGNob2ljZXMgZ3JvdXBcbiAqIEBjb25zdHJ1Y3RvclxuICogQHBhcmFtIHtTdHJpbmd9IGxpbmUgICBTZXBhcmF0aW9uIGxpbmUgY29udGVudCAoZmFjdWx0YXRpdmUpXG4gKi9cblxudmFyIFNlcGFyYXRvciA9IG1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGxpbmUpIHtcbiAgdGhpcy50eXBlID0gJ3NlcGFyYXRvcic7XG4gIHRoaXMubGluZSA9IGNoYWxrLmRpbShsaW5lIHx8IG5ldyBBcnJheSgxNSkuam9pbihmaWd1cmVzLmxpbmUpKTtcbn07XG5cbi8qKlxuICogSGVscGVyIGZ1bmN0aW9uIHJldHVybmluZyBmYWxzZSBpZiBvYmplY3QgaXMgYSBzZXBhcmF0b3JcbiAqIEBwYXJhbSAge09iamVjdH0gb2JqIG9iamVjdCB0byB0ZXN0IGFnYWluc3RcbiAqIEByZXR1cm4ge0Jvb2xlYW59ICAgIGBmYWxzZWAgaWYgb2JqZWN0IGlzIGEgc2VwYXJhdG9yXG4gKi9cblxuU2VwYXJhdG9yLmV4Y2x1ZGUgPSBmdW5jdGlvbiAob2JqKSB7XG4gIHJldHVybiBvYmoudHlwZSAhPT0gJ3NlcGFyYXRvcic7XG59O1xuXG4vKipcbiAqIFN0cmluZ2lmeSBzZXBhcmF0b3JcbiAqIEByZXR1cm4ge1N0cmluZ30gdGhlIHNlcGFyYXRvciBkaXNwbGF5IHN0cmluZ1xuICovXG5cblNlcGFyYXRvci5wcm90b3R5cGUudG9TdHJpbmcgPSBmdW5jdGlvbiAoKSB7XG4gIHJldHVybiB0aGlzLmxpbmU7XG59O1xuIl19