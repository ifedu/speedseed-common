'use strict';
var numberIsNan = require('number-is-nan');
module.exports = function (x) {
    if (numberIsNan(x)) {
        return false;
    }
    // https://github.com/nodejs/io.js/blob/cff7300a578be1b10001f2d967aaedc88aee6402/lib/readline.js#L1369
    // code points are derived from:
    // http://www.unix.org/Public/UNIDATA/EastAsianWidth.txt
    if (x >= 0x1100 && (x <= 0x115f || // Hangul Jamo
        0x2329 === x || // LEFT-POINTING ANGLE BRACKET
        0x232a === x || // RIGHT-POINTING ANGLE BRACKET
        // CJK Radicals Supplement .. Enclosed CJK Letters and Months
        (0x2e80 <= x && x <= 0x3247 && x !== 0x303f) ||
        // Enclosed CJK Letters and Months .. CJK Unified Ideographs Extension A
        0x3250 <= x && x <= 0x4dbf ||
        // CJK Unified Ideographs .. Yi Radicals
        0x4e00 <= x && x <= 0xa4c6 ||
        // Hangul Jamo Extended-A
        0xa960 <= x && x <= 0xa97c ||
        // Hangul Syllables
        0xac00 <= x && x <= 0xd7a3 ||
        // CJK Compatibility Ideographs
        0xf900 <= x && x <= 0xfaff ||
        // Vertical Forms
        0xfe10 <= x && x <= 0xfe19 ||
        // CJK Compatibility Forms .. Small Form Variants
        0xfe30 <= x && x <= 0xfe6b ||
        // Halfwidth and Fullwidth Forms
        0xff01 <= x && x <= 0xff60 ||
        0xffe0 <= x && x <= 0xffe6 ||
        // Kana Supplement
        0x1b000 <= x && x <= 0x1b001 ||
        // Enclosed Ideographic Supplement
        0x1f200 <= x && x <= 0x1f251 ||
        // CJK Unified Ideographs Extension B .. Tertiary Ideographic Plane
        0x20000 <= x && x <= 0x3fffd)) {
        return true;
    }
    return false;
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQzpcXFVzZXJzXFxpZmVkdVxcQXBwRGF0YVxcUm9hbWluZ1xcbnZtXFx2OC40LjBcXG5vZGVfbW9kdWxlc1xcZ2VuZXJhdG9yLXNwZWVkc2VlZFxcbm9kZV9tb2R1bGVzXFxpcy1mdWxsd2lkdGgtY29kZS1wb2ludFxcaW5kZXguanMiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcaWZlZHVcXEFwcERhdGFcXFJvYW1pbmdcXG52bVxcdjguNC4wXFxub2RlX21vZHVsZXNcXGdlbmVyYXRvci1zcGVlZHNlZWRcXG5vZGVfbW9kdWxlc1xcaXMtZnVsbHdpZHRoLWNvZGUtcG9pbnRcXGluZGV4LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLFlBQVksQ0FBQztBQUNiLElBQUksV0FBVyxHQUFHLE9BQU8sQ0FBQyxlQUFlLENBQUMsQ0FBQztBQUUzQyxNQUFNLENBQUMsT0FBTyxHQUFHLFVBQVUsQ0FBQztJQUMzQixFQUFFLENBQUMsQ0FBQyxXQUFXLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBQ3BCLE1BQU0sQ0FBQyxLQUFLLENBQUM7SUFDZCxDQUFDO0lBRUQsc0dBQXNHO0lBRXRHLGdDQUFnQztJQUNoQyx3REFBd0Q7SUFDeEQsRUFBRSxDQUFDLENBQUMsQ0FBQyxJQUFJLE1BQU0sSUFBSSxDQUNsQixDQUFDLElBQUksTUFBTSxJQUFLLGNBQWM7UUFDOUIsTUFBTSxLQUFLLENBQUMsSUFBSSw4QkFBOEI7UUFDOUMsTUFBTSxLQUFLLENBQUMsSUFBSSwrQkFBK0I7UUFDL0MsNkRBQTZEO1FBQzdELENBQUMsTUFBTSxJQUFJLENBQUMsSUFBSSxDQUFDLElBQUksTUFBTSxJQUFJLENBQUMsS0FBSyxNQUFNLENBQUM7UUFDNUMsd0VBQXdFO1FBQ3hFLE1BQU0sSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLE1BQU07UUFDMUIsd0NBQXdDO1FBQ3hDLE1BQU0sSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLE1BQU07UUFDMUIseUJBQXlCO1FBQ3pCLE1BQU0sSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLE1BQU07UUFDMUIsbUJBQW1CO1FBQ25CLE1BQU0sSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLE1BQU07UUFDMUIsK0JBQStCO1FBQy9CLE1BQU0sSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLE1BQU07UUFDMUIsaUJBQWlCO1FBQ2pCLE1BQU0sSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLE1BQU07UUFDMUIsaURBQWlEO1FBQ2pELE1BQU0sSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLE1BQU07UUFDMUIsZ0NBQWdDO1FBQ2hDLE1BQU0sSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLE1BQU07UUFDMUIsTUFBTSxJQUFJLENBQUMsSUFBSSxDQUFDLElBQUksTUFBTTtRQUMxQixrQkFBa0I7UUFDbEIsT0FBTyxJQUFJLENBQUMsSUFBSSxDQUFDLElBQUksT0FBTztRQUM1QixrQ0FBa0M7UUFDbEMsT0FBTyxJQUFJLENBQUMsSUFBSSxDQUFDLElBQUksT0FBTztRQUM1QixtRUFBbUU7UUFDbkUsT0FBTyxJQUFJLENBQUMsSUFBSSxDQUFDLElBQUksT0FBTyxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBQ2hDLE1BQU0sQ0FBQyxJQUFJLENBQUM7SUFDYixDQUFDO0lBRUQsTUFBTSxDQUFDLEtBQUssQ0FBQztBQUNkLENBQUMsQ0FBQSIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcbnZhciBudW1iZXJJc05hbiA9IHJlcXVpcmUoJ251bWJlci1pcy1uYW4nKTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoeCkge1xuXHRpZiAobnVtYmVySXNOYW4oeCkpIHtcblx0XHRyZXR1cm4gZmFsc2U7XG5cdH1cblxuXHQvLyBodHRwczovL2dpdGh1Yi5jb20vbm9kZWpzL2lvLmpzL2Jsb2IvY2ZmNzMwMGE1NzhiZTFiMTAwMDFmMmQ5NjdhYWVkYzg4YWVlNjQwMi9saWIvcmVhZGxpbmUuanMjTDEzNjlcblxuXHQvLyBjb2RlIHBvaW50cyBhcmUgZGVyaXZlZCBmcm9tOlxuXHQvLyBodHRwOi8vd3d3LnVuaXgub3JnL1B1YmxpYy9VTklEQVRBL0Vhc3RBc2lhbldpZHRoLnR4dFxuXHRpZiAoeCA+PSAweDExMDAgJiYgKFxuXHRcdHggPD0gMHgxMTVmIHx8ICAvLyBIYW5ndWwgSmFtb1xuXHRcdDB4MjMyOSA9PT0geCB8fCAvLyBMRUZULVBPSU5USU5HIEFOR0xFIEJSQUNLRVRcblx0XHQweDIzMmEgPT09IHggfHwgLy8gUklHSFQtUE9JTlRJTkcgQU5HTEUgQlJBQ0tFVFxuXHRcdC8vIENKSyBSYWRpY2FscyBTdXBwbGVtZW50IC4uIEVuY2xvc2VkIENKSyBMZXR0ZXJzIGFuZCBNb250aHNcblx0XHQoMHgyZTgwIDw9IHggJiYgeCA8PSAweDMyNDcgJiYgeCAhPT0gMHgzMDNmKSB8fFxuXHRcdC8vIEVuY2xvc2VkIENKSyBMZXR0ZXJzIGFuZCBNb250aHMgLi4gQ0pLIFVuaWZpZWQgSWRlb2dyYXBocyBFeHRlbnNpb24gQVxuXHRcdDB4MzI1MCA8PSB4ICYmIHggPD0gMHg0ZGJmIHx8XG5cdFx0Ly8gQ0pLIFVuaWZpZWQgSWRlb2dyYXBocyAuLiBZaSBSYWRpY2Fsc1xuXHRcdDB4NGUwMCA8PSB4ICYmIHggPD0gMHhhNGM2IHx8XG5cdFx0Ly8gSGFuZ3VsIEphbW8gRXh0ZW5kZWQtQVxuXHRcdDB4YTk2MCA8PSB4ICYmIHggPD0gMHhhOTdjIHx8XG5cdFx0Ly8gSGFuZ3VsIFN5bGxhYmxlc1xuXHRcdDB4YWMwMCA8PSB4ICYmIHggPD0gMHhkN2EzIHx8XG5cdFx0Ly8gQ0pLIENvbXBhdGliaWxpdHkgSWRlb2dyYXBoc1xuXHRcdDB4ZjkwMCA8PSB4ICYmIHggPD0gMHhmYWZmIHx8XG5cdFx0Ly8gVmVydGljYWwgRm9ybXNcblx0XHQweGZlMTAgPD0geCAmJiB4IDw9IDB4ZmUxOSB8fFxuXHRcdC8vIENKSyBDb21wYXRpYmlsaXR5IEZvcm1zIC4uIFNtYWxsIEZvcm0gVmFyaWFudHNcblx0XHQweGZlMzAgPD0geCAmJiB4IDw9IDB4ZmU2YiB8fFxuXHRcdC8vIEhhbGZ3aWR0aCBhbmQgRnVsbHdpZHRoIEZvcm1zXG5cdFx0MHhmZjAxIDw9IHggJiYgeCA8PSAweGZmNjAgfHxcblx0XHQweGZmZTAgPD0geCAmJiB4IDw9IDB4ZmZlNiB8fFxuXHRcdC8vIEthbmEgU3VwcGxlbWVudFxuXHRcdDB4MWIwMDAgPD0geCAmJiB4IDw9IDB4MWIwMDEgfHxcblx0XHQvLyBFbmNsb3NlZCBJZGVvZ3JhcGhpYyBTdXBwbGVtZW50XG5cdFx0MHgxZjIwMCA8PSB4ICYmIHggPD0gMHgxZjI1MSB8fFxuXHRcdC8vIENKSyBVbmlmaWVkIElkZW9ncmFwaHMgRXh0ZW5zaW9uIEIgLi4gVGVydGlhcnkgSWRlb2dyYXBoaWMgUGxhbmVcblx0XHQweDIwMDAwIDw9IHggJiYgeCA8PSAweDNmZmZkKSkge1xuXHRcdHJldHVybiB0cnVlO1xuXHR9XG5cblx0cmV0dXJuIGZhbHNlO1xufVxuIl19