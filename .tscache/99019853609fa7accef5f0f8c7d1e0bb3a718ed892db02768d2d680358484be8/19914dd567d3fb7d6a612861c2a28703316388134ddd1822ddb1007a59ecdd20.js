'use strict';
var _ = require('lodash');
module.exports = SubQueue;
function SubQueue() {
    this.__queue__ = [];
}
/**
 * Add a task to this queue
 * @param  {Function} task
 */
SubQueue.prototype.push = function (task, opt) {
    opt = opt || {};
    // Don't register named task if they're already planned
    if (opt.once && _.find(this.__queue__, { name: opt.once })) {
        return;
    }
    this.__queue__.push({ task: task, name: opt.once });
};
/**
 * Return the first entry of this queue
 * @return {Function} The first task
 */
SubQueue.prototype.shift = function () {
    return this.__queue__.shift();
};
/**
 * Run task
 * @param  {Function} skip  Callback if no task is available
 * @param  {Function} done  Callback once the task is completed
 */
SubQueue.prototype.run = function (skip, done) {
    if (this.__queue__.length === 0)
        return skip();
    setImmediate(this.shift().task.bind(null, done));
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQzpcXFVzZXJzXFxpZmVkdVxcQXBwRGF0YVxcUm9hbWluZ1xcbnZtXFx2OC40LjBcXG5vZGVfbW9kdWxlc1xcZ2VuZXJhdG9yLXNwZWVkc2VlZFxcbm9kZV9tb2R1bGVzXFxncm91cGVkLXF1ZXVlXFxsaWJcXHN1YnF1ZXVlLmpzIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXGlmZWR1XFxBcHBEYXRhXFxSb2FtaW5nXFxudm1cXHY4LjQuMFxcbm9kZV9tb2R1bGVzXFxnZW5lcmF0b3Itc3BlZWRzZWVkXFxub2RlX21vZHVsZXNcXGdyb3VwZWQtcXVldWVcXGxpYlxcc3VicXVldWUuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsWUFBWSxDQUFDO0FBQ2IsSUFBSSxDQUFDLEdBQUcsT0FBTyxDQUFDLFFBQVEsQ0FBQyxDQUFDO0FBRTFCLE1BQU0sQ0FBQyxPQUFPLEdBQUcsUUFBUSxDQUFDO0FBRTFCO0lBQ0UsSUFBSSxDQUFDLFNBQVMsR0FBRyxFQUFFLENBQUM7QUFDdEIsQ0FBQztBQUVEOzs7R0FHRztBQUVILFFBQVEsQ0FBQyxTQUFTLENBQUMsSUFBSSxHQUFHLFVBQVUsSUFBSSxFQUFFLEdBQUc7SUFDM0MsR0FBRyxHQUFHLEdBQUcsSUFBSSxFQUFFLENBQUM7SUFFaEIsdURBQXVEO0lBQ3ZELEVBQUUsQ0FBQyxDQUFFLEdBQUcsQ0FBQyxJQUFJLElBQUksQ0FBQyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsU0FBUyxFQUFFLEVBQUUsSUFBSSxFQUFFLEdBQUcsQ0FBQyxJQUFJLEVBQUUsQ0FBRSxDQUFDLENBQUMsQ0FBQztRQUM3RCxNQUFNLENBQUM7SUFDVCxDQUFDO0lBRUQsSUFBSSxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxHQUFHLENBQUMsSUFBSSxFQUFFLENBQUMsQ0FBQztBQUN0RCxDQUFDLENBQUM7QUFFRjs7O0dBR0c7QUFFSCxRQUFRLENBQUMsU0FBUyxDQUFDLEtBQUssR0FBRztJQUN6QixNQUFNLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxLQUFLLEVBQUUsQ0FBQztBQUNoQyxDQUFDLENBQUM7QUFFRjs7OztHQUlHO0FBRUgsUUFBUSxDQUFDLFNBQVMsQ0FBQyxHQUFHLEdBQUcsVUFBVSxJQUFJLEVBQUUsSUFBSTtJQUMzQyxFQUFFLENBQUMsQ0FBRSxJQUFJLENBQUMsU0FBUyxDQUFDLE1BQU0sS0FBSyxDQUFFLENBQUM7UUFBQyxNQUFNLENBQUMsSUFBSSxFQUFFLENBQUM7SUFDakQsWUFBWSxDQUFFLElBQUksQ0FBQyxLQUFLLEVBQUUsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLElBQUksRUFBRSxJQUFJLENBQUMsQ0FBRSxDQUFDO0FBQ3JELENBQUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcbnZhciBfID0gcmVxdWlyZSgnbG9kYXNoJyk7XG5cbm1vZHVsZS5leHBvcnRzID0gU3ViUXVldWU7XG5cbmZ1bmN0aW9uIFN1YlF1ZXVlKCkge1xuICB0aGlzLl9fcXVldWVfXyA9IFtdO1xufVxuXG4vKipcbiAqIEFkZCBhIHRhc2sgdG8gdGhpcyBxdWV1ZVxuICogQHBhcmFtICB7RnVuY3Rpb259IHRhc2tcbiAqL1xuXG5TdWJRdWV1ZS5wcm90b3R5cGUucHVzaCA9IGZ1bmN0aW9uKCB0YXNrLCBvcHQgKSB7XG4gIG9wdCA9IG9wdCB8fCB7fTtcblxuICAvLyBEb24ndCByZWdpc3RlciBuYW1lZCB0YXNrIGlmIHRoZXkncmUgYWxyZWFkeSBwbGFubmVkXG4gIGlmICggb3B0Lm9uY2UgJiYgXy5maW5kKHRoaXMuX19xdWV1ZV9fLCB7IG5hbWU6IG9wdC5vbmNlIH0pICkge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIHRoaXMuX19xdWV1ZV9fLnB1c2goeyB0YXNrOiB0YXNrLCBuYW1lOiBvcHQub25jZSB9KTtcbn07XG5cbi8qKlxuICogUmV0dXJuIHRoZSBmaXJzdCBlbnRyeSBvZiB0aGlzIHF1ZXVlXG4gKiBAcmV0dXJuIHtGdW5jdGlvbn0gVGhlIGZpcnN0IHRhc2tcbiAqL1xuXG5TdWJRdWV1ZS5wcm90b3R5cGUuc2hpZnQgPSBmdW5jdGlvbigpIHtcbiAgcmV0dXJuIHRoaXMuX19xdWV1ZV9fLnNoaWZ0KCk7XG59O1xuXG4vKipcbiAqIFJ1biB0YXNrXG4gKiBAcGFyYW0gIHtGdW5jdGlvbn0gc2tpcCAgQ2FsbGJhY2sgaWYgbm8gdGFzayBpcyBhdmFpbGFibGVcbiAqIEBwYXJhbSAge0Z1bmN0aW9ufSBkb25lICBDYWxsYmFjayBvbmNlIHRoZSB0YXNrIGlzIGNvbXBsZXRlZFxuICovXG5cblN1YlF1ZXVlLnByb3RvdHlwZS5ydW4gPSBmdW5jdGlvbiggc2tpcCwgZG9uZSApIHtcbiAgaWYgKCB0aGlzLl9fcXVldWVfXy5sZW5ndGggPT09IDAgKSByZXR1cm4gc2tpcCgpO1xuICBzZXRJbW1lZGlhdGUoIHRoaXMuc2hpZnQoKS50YXNrLmJpbmQobnVsbCwgZG9uZSkgKTtcbn07XG4iXX0=