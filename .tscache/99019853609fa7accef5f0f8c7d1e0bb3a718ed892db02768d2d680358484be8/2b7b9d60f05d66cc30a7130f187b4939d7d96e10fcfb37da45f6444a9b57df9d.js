// Generated by CoffeeScript 1.11.1
/*
  ExternalEditor
  Kevin Gravier <kevin@mrkmg.com>
  MIT
 */
(function () {
    var LaunchEditorError, extend = function (child, parent) { for (var key in parent) {
        if (hasProp.call(parent, key))
            child[key] = parent[key];
    } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; }, hasProp = {}.hasOwnProperty;
    LaunchEditorError = (function (superClass) {
        extend(LaunchEditorError, superClass);
        LaunchEditorError.prototype.message = 'Failed launch editor';
        function LaunchEditorError(original_error) {
            this.original_error = original_error;
        }
        return LaunchEditorError;
    })(Error);
    module.exports = LaunchEditorError;
}).call(this);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQzpcXFVzZXJzXFxpZmVkdVxcQXBwRGF0YVxcUm9hbWluZ1xcbnZtXFx2OC40LjBcXG5vZGVfbW9kdWxlc1xcZ2VuZXJhdG9yLXNwZWVkc2VlZFxcbm9kZV9tb2R1bGVzXFxleHRlcm5hbC1lZGl0b3JcXG1haW5cXGVycm9yc1xcTGF1bmNoRWRpdG9yRXJyb3IuanMiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcaWZlZHVcXEFwcERhdGFcXFJvYW1pbmdcXG52bVxcdjguNC4wXFxub2RlX21vZHVsZXNcXGdlbmVyYXRvci1zcGVlZHNlZWRcXG5vZGVfbW9kdWxlc1xcZXh0ZXJuYWwtZWRpdG9yXFxtYWluXFxlcnJvcnNcXExhdW5jaEVkaXRvckVycm9yLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLG1DQUFtQztBQUVuQzs7OztHQUlHO0FBRUgsQ0FBQztJQUNDLElBQUksaUJBQWlCLEVBQ25CLE1BQU0sR0FBRyxVQUFTLEtBQUssRUFBRSxNQUFNLElBQUksR0FBRyxDQUFDLENBQUMsSUFBSSxHQUFHLElBQUksTUFBTSxDQUFDLENBQUMsQ0FBQztRQUFDLEVBQUUsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsTUFBTSxFQUFFLEdBQUcsQ0FBQyxDQUFDO1lBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxHQUFHLE1BQU0sQ0FBQyxHQUFHLENBQUMsQ0FBQztJQUFDLENBQUMsQ0FBQyxrQkFBa0IsSUFBSSxDQUFDLFdBQVcsR0FBRyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLFNBQVMsR0FBRyxNQUFNLENBQUMsU0FBUyxDQUFDLENBQUMsS0FBSyxDQUFDLFNBQVMsR0FBRyxJQUFJLElBQUksRUFBRSxDQUFDLENBQUMsS0FBSyxDQUFDLFNBQVMsR0FBRyxNQUFNLENBQUMsU0FBUyxDQUFDLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsRUFDMVIsT0FBTyxHQUFHLEVBQUUsQ0FBQyxjQUFjLENBQUM7SUFFOUIsaUJBQWlCLEdBQUcsQ0FBQyxVQUFTLFVBQVU7UUFDdEMsTUFBTSxDQUFDLGlCQUFpQixFQUFFLFVBQVUsQ0FBQyxDQUFDO1FBRXRDLGlCQUFpQixDQUFDLFNBQVMsQ0FBQyxPQUFPLEdBQUcsc0JBQXNCLENBQUM7UUFFN0QsMkJBQTJCLGNBQWM7WUFDdkMsSUFBSSxDQUFDLGNBQWMsR0FBRyxjQUFjLENBQUM7UUFDdkMsQ0FBQztRQUVELE1BQU0sQ0FBQyxpQkFBaUIsQ0FBQztJQUUzQixDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUVWLE1BQU0sQ0FBQyxPQUFPLEdBQUcsaUJBQWlCLENBQUM7QUFFckMsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLy8gR2VuZXJhdGVkIGJ5IENvZmZlZVNjcmlwdCAxLjExLjFcblxuLypcbiAgRXh0ZXJuYWxFZGl0b3JcbiAgS2V2aW4gR3JhdmllciA8a2V2aW5AbXJrbWcuY29tPlxuICBNSVRcbiAqL1xuXG4oZnVuY3Rpb24oKSB7XG4gIHZhciBMYXVuY2hFZGl0b3JFcnJvcixcbiAgICBleHRlbmQgPSBmdW5jdGlvbihjaGlsZCwgcGFyZW50KSB7IGZvciAodmFyIGtleSBpbiBwYXJlbnQpIHsgaWYgKGhhc1Byb3AuY2FsbChwYXJlbnQsIGtleSkpIGNoaWxkW2tleV0gPSBwYXJlbnRba2V5XTsgfSBmdW5jdGlvbiBjdG9yKCkgeyB0aGlzLmNvbnN0cnVjdG9yID0gY2hpbGQ7IH0gY3Rvci5wcm90b3R5cGUgPSBwYXJlbnQucHJvdG90eXBlOyBjaGlsZC5wcm90b3R5cGUgPSBuZXcgY3RvcigpOyBjaGlsZC5fX3N1cGVyX18gPSBwYXJlbnQucHJvdG90eXBlOyByZXR1cm4gY2hpbGQ7IH0sXG4gICAgaGFzUHJvcCA9IHt9Lmhhc093blByb3BlcnR5O1xuXG4gIExhdW5jaEVkaXRvckVycm9yID0gKGZ1bmN0aW9uKHN1cGVyQ2xhc3MpIHtcbiAgICBleHRlbmQoTGF1bmNoRWRpdG9yRXJyb3IsIHN1cGVyQ2xhc3MpO1xuXG4gICAgTGF1bmNoRWRpdG9yRXJyb3IucHJvdG90eXBlLm1lc3NhZ2UgPSAnRmFpbGVkIGxhdW5jaCBlZGl0b3InO1xuXG4gICAgZnVuY3Rpb24gTGF1bmNoRWRpdG9yRXJyb3Iob3JpZ2luYWxfZXJyb3IpIHtcbiAgICAgIHRoaXMub3JpZ2luYWxfZXJyb3IgPSBvcmlnaW5hbF9lcnJvcjtcbiAgICB9XG5cbiAgICByZXR1cm4gTGF1bmNoRWRpdG9yRXJyb3I7XG5cbiAgfSkoRXJyb3IpO1xuXG4gIG1vZHVsZS5leHBvcnRzID0gTGF1bmNoRWRpdG9yRXJyb3I7XG5cbn0pLmNhbGwodGhpcyk7XG4iXX0=