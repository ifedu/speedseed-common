'use strict';
module.exports = function (fn, errMsg) {
    if (typeof fn !== 'function') {
        throw new TypeError('Expected a function');
    }
    var ret;
    var called = false;
    var fnName = fn.displayName || fn.name || (/function ([^\(]+)/.exec(fn.toString()) || [])[1];
    var onetime = function () {
        if (called) {
            if (errMsg === true) {
                fnName = fnName ? fnName + '()' : 'Function';
                throw new Error(fnName + ' can only be called once.');
            }
            return ret;
        }
        called = true;
        ret = fn.apply(this, arguments);
        fn = null;
        return ret;
    };
    onetime.displayName = fnName;
    return onetime;
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQzpcXFVzZXJzXFxpZmVkdVxcQXBwRGF0YVxcUm9hbWluZ1xcbnZtXFx2OC40LjBcXG5vZGVfbW9kdWxlc1xcZ2VuZXJhdG9yLXNwZWVkc2VlZFxcbm9kZV9tb2R1bGVzXFxvbmV0aW1lXFxpbmRleC5qcyIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxpZmVkdVxcQXBwRGF0YVxcUm9hbWluZ1xcbnZtXFx2OC40LjBcXG5vZGVfbW9kdWxlc1xcZ2VuZXJhdG9yLXNwZWVkc2VlZFxcbm9kZV9tb2R1bGVzXFxvbmV0aW1lXFxpbmRleC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxZQUFZLENBQUM7QUFDYixNQUFNLENBQUMsT0FBTyxHQUFHLFVBQVUsRUFBRSxFQUFFLE1BQU07SUFDcEMsRUFBRSxDQUFDLENBQUMsT0FBTyxFQUFFLEtBQUssVUFBVSxDQUFDLENBQUMsQ0FBQztRQUM5QixNQUFNLElBQUksU0FBUyxDQUFDLHFCQUFxQixDQUFDLENBQUM7SUFDNUMsQ0FBQztJQUVELElBQUksR0FBRyxDQUFDO0lBQ1IsSUFBSSxNQUFNLEdBQUcsS0FBSyxDQUFDO0lBQ25CLElBQUksTUFBTSxHQUFHLEVBQUUsQ0FBQyxXQUFXLElBQUksRUFBRSxDQUFDLElBQUksSUFBSSxDQUFDLG1CQUFtQixDQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsUUFBUSxFQUFFLENBQUMsSUFBSSxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUU3RixJQUFJLE9BQU8sR0FBRztRQUNiLEVBQUUsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUM7WUFDWixFQUFFLENBQUMsQ0FBQyxNQUFNLEtBQUssSUFBSSxDQUFDLENBQUMsQ0FBQztnQkFDckIsTUFBTSxHQUFHLE1BQU0sR0FBRyxNQUFNLEdBQUcsSUFBSSxHQUFHLFVBQVUsQ0FBQztnQkFDN0MsTUFBTSxJQUFJLEtBQUssQ0FBQyxNQUFNLEdBQUcsMkJBQTJCLENBQUMsQ0FBQztZQUN2RCxDQUFDO1lBRUQsTUFBTSxDQUFDLEdBQUcsQ0FBQztRQUNaLENBQUM7UUFFRCxNQUFNLEdBQUcsSUFBSSxDQUFDO1FBQ2QsR0FBRyxHQUFHLEVBQUUsQ0FBQyxLQUFLLENBQUMsSUFBSSxFQUFFLFNBQVMsQ0FBQyxDQUFDO1FBQ2hDLEVBQUUsR0FBRyxJQUFJLENBQUM7UUFFVixNQUFNLENBQUMsR0FBRyxDQUFDO0lBQ1osQ0FBQyxDQUFDO0lBRUYsT0FBTyxDQUFDLFdBQVcsR0FBRyxNQUFNLENBQUM7SUFFN0IsTUFBTSxDQUFDLE9BQU8sQ0FBQztBQUNoQixDQUFDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChmbiwgZXJyTXNnKSB7XG5cdGlmICh0eXBlb2YgZm4gIT09ICdmdW5jdGlvbicpIHtcblx0XHR0aHJvdyBuZXcgVHlwZUVycm9yKCdFeHBlY3RlZCBhIGZ1bmN0aW9uJyk7XG5cdH1cblxuXHR2YXIgcmV0O1xuXHR2YXIgY2FsbGVkID0gZmFsc2U7XG5cdHZhciBmbk5hbWUgPSBmbi5kaXNwbGF5TmFtZSB8fCBmbi5uYW1lIHx8ICgvZnVuY3Rpb24gKFteXFwoXSspLy5leGVjKGZuLnRvU3RyaW5nKCkpIHx8IFtdKVsxXTtcblxuXHR2YXIgb25ldGltZSA9IGZ1bmN0aW9uICgpIHtcblx0XHRpZiAoY2FsbGVkKSB7XG5cdFx0XHRpZiAoZXJyTXNnID09PSB0cnVlKSB7XG5cdFx0XHRcdGZuTmFtZSA9IGZuTmFtZSA/IGZuTmFtZSArICcoKScgOiAnRnVuY3Rpb24nO1xuXHRcdFx0XHR0aHJvdyBuZXcgRXJyb3IoZm5OYW1lICsgJyBjYW4gb25seSBiZSBjYWxsZWQgb25jZS4nKTtcblx0XHRcdH1cblxuXHRcdFx0cmV0dXJuIHJldDtcblx0XHR9XG5cblx0XHRjYWxsZWQgPSB0cnVlO1xuXHRcdHJldCA9IGZuLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG5cdFx0Zm4gPSBudWxsO1xuXG5cdFx0cmV0dXJuIHJldDtcblx0fTtcblxuXHRvbmV0aW1lLmRpc3BsYXlOYW1lID0gZm5OYW1lO1xuXG5cdHJldHVybiBvbmV0aW1lO1xufTtcbiJdfQ==