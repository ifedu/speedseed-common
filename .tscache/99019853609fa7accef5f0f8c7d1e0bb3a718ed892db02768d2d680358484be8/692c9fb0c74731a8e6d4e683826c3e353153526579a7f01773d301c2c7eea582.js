var util = require("util");
var messages = require("./warning_messages.json");
module.exports = function () {
    var args = Array.prototype.slice.call(arguments, 0);
    var warningName = args.shift();
    if (warningName == "typo") {
        return makeTypoWarning.apply(null, args);
    }
    else {
        var msgTemplate = messages[warningName] ? messages[warningName] : warningName + ": '%s'";
        args.unshift(msgTemplate);
        return util.format.apply(null, args);
    }
};
function makeTypoWarning(providedName, probableName, field) {
    if (field) {
        providedName = field + "['" + providedName + "']";
        probableName = field + "['" + probableName + "']";
    }
    return util.format(messages.typo, providedName, probableName);
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQzpcXFVzZXJzXFxpZmVkdVxcQXBwRGF0YVxcUm9hbWluZ1xcbnZtXFx2OC40LjBcXG5vZGVfbW9kdWxlc1xcZ2VuZXJhdG9yLXNwZWVkc2VlZFxcbm9kZV9tb2R1bGVzXFxub3JtYWxpemUtcGFja2FnZS1kYXRhXFxsaWJcXG1ha2Vfd2FybmluZy5qcyIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxpZmVkdVxcQXBwRGF0YVxcUm9hbWluZ1xcbnZtXFx2OC40LjBcXG5vZGVfbW9kdWxlc1xcZ2VuZXJhdG9yLXNwZWVkc2VlZFxcbm9kZV9tb2R1bGVzXFxub3JtYWxpemUtcGFja2FnZS1kYXRhXFxsaWJcXG1ha2Vfd2FybmluZy5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxJQUFJLElBQUksR0FBRyxPQUFPLENBQUMsTUFBTSxDQUFDLENBQUE7QUFDMUIsSUFBSSxRQUFRLEdBQUcsT0FBTyxDQUFDLHlCQUF5QixDQUFDLENBQUE7QUFFakQsTUFBTSxDQUFDLE9BQU8sR0FBRztJQUNmLElBQUksSUFBSSxHQUFHLEtBQUssQ0FBQyxTQUFTLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxTQUFTLEVBQUUsQ0FBQyxDQUFDLENBQUE7SUFDbkQsSUFBSSxXQUFXLEdBQUcsSUFBSSxDQUFDLEtBQUssRUFBRSxDQUFBO0lBQzlCLEVBQUUsQ0FBQyxDQUFDLFdBQVcsSUFBSSxNQUFNLENBQUMsQ0FBQyxDQUFDO1FBQzFCLE1BQU0sQ0FBQyxlQUFlLENBQUMsS0FBSyxDQUFDLElBQUksRUFBQyxJQUFJLENBQUMsQ0FBQTtJQUN6QyxDQUFDO0lBQ0QsSUFBSSxDQUFDLENBQUM7UUFDSixJQUFJLFdBQVcsR0FBRyxRQUFRLENBQUMsV0FBVyxDQUFDLEdBQUcsUUFBUSxDQUFDLFdBQVcsQ0FBQyxHQUFHLFdBQVcsR0FBRyxRQUFRLENBQUE7UUFDeEYsSUFBSSxDQUFDLE9BQU8sQ0FBQyxXQUFXLENBQUMsQ0FBQTtRQUN6QixNQUFNLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUMsSUFBSSxFQUFFLElBQUksQ0FBQyxDQUFBO0lBQ3RDLENBQUM7QUFDSCxDQUFDLENBQUE7QUFFRCx5QkFBMEIsWUFBWSxFQUFFLFlBQVksRUFBRSxLQUFLO0lBQ3pELEVBQUUsQ0FBQyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUM7UUFDVixZQUFZLEdBQUcsS0FBSyxHQUFHLElBQUksR0FBRyxZQUFZLEdBQUcsSUFBSSxDQUFBO1FBQ2pELFlBQVksR0FBRyxLQUFLLEdBQUcsSUFBSSxHQUFHLFlBQVksR0FBRyxJQUFJLENBQUE7SUFDbkQsQ0FBQztJQUNELE1BQU0sQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLFFBQVEsQ0FBQyxJQUFJLEVBQUUsWUFBWSxFQUFFLFlBQVksQ0FBQyxDQUFBO0FBQy9ELENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgdXRpbCA9IHJlcXVpcmUoXCJ1dGlsXCIpXG52YXIgbWVzc2FnZXMgPSByZXF1aXJlKFwiLi93YXJuaW5nX21lc3NhZ2VzLmpzb25cIilcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbigpIHtcbiAgdmFyIGFyZ3MgPSBBcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChhcmd1bWVudHMsIDApXG4gIHZhciB3YXJuaW5nTmFtZSA9IGFyZ3Muc2hpZnQoKVxuICBpZiAod2FybmluZ05hbWUgPT0gXCJ0eXBvXCIpIHtcbiAgICByZXR1cm4gbWFrZVR5cG9XYXJuaW5nLmFwcGx5KG51bGwsYXJncylcbiAgfVxuICBlbHNlIHtcbiAgICB2YXIgbXNnVGVtcGxhdGUgPSBtZXNzYWdlc1t3YXJuaW5nTmFtZV0gPyBtZXNzYWdlc1t3YXJuaW5nTmFtZV0gOiB3YXJuaW5nTmFtZSArIFwiOiAnJXMnXCJcbiAgICBhcmdzLnVuc2hpZnQobXNnVGVtcGxhdGUpXG4gICAgcmV0dXJuIHV0aWwuZm9ybWF0LmFwcGx5KG51bGwsIGFyZ3MpXG4gIH1cbn1cblxuZnVuY3Rpb24gbWFrZVR5cG9XYXJuaW5nIChwcm92aWRlZE5hbWUsIHByb2JhYmxlTmFtZSwgZmllbGQpIHtcbiAgaWYgKGZpZWxkKSB7XG4gICAgcHJvdmlkZWROYW1lID0gZmllbGQgKyBcIlsnXCIgKyBwcm92aWRlZE5hbWUgKyBcIiddXCJcbiAgICBwcm9iYWJsZU5hbWUgPSBmaWVsZCArIFwiWydcIiArIHByb2JhYmxlTmFtZSArIFwiJ11cIlxuICB9XG4gIHJldHVybiB1dGlsLmZvcm1hdChtZXNzYWdlcy50eXBvLCBwcm92aWRlZE5hbWUsIHByb2JhYmxlTmFtZSlcbn1cbiJdfQ==