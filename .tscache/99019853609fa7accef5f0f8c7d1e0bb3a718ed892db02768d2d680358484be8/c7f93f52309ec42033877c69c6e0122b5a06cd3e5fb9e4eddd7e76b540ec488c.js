'use strict';
var fs = require('fs');
var LRU = require('lru-cache');
var shebangCommand = require('shebang-command');
var shebangCache = new LRU({ max: 50, maxAge: 30 * 1000 }); // Cache just for 30sec
function readShebang(command) {
    var buffer;
    var fd;
    var shebang;
    // Check if it is in the cache first
    if (shebangCache.has(command)) {
        return shebangCache.get(command);
    }
    // Read the first 150 bytes from the file
    buffer = new Buffer(150);
    try {
        fd = fs.openSync(command, 'r');
        fs.readSync(fd, buffer, 0, 150, 0);
        fs.closeSync(fd);
    }
    catch (e) { }
    // Attempt to extract shebang (null is returned if not a shebang)
    shebang = shebangCommand(buffer.toString());
    // Store the shebang in the cache
    shebangCache.set(command, shebang);
    return shebang;
}
module.exports = readShebang;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQzpcXFVzZXJzXFxpZmVkdVxcQXBwRGF0YVxcUm9hbWluZ1xcbnZtXFx2OC40LjBcXG5vZGVfbW9kdWxlc1xcZ2VuZXJhdG9yLXNwZWVkc2VlZFxcbm9kZV9tb2R1bGVzXFxjcm9zcy1zcGF3blxcbGliXFx1dGlsXFxyZWFkU2hlYmFuZy5qcyIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxpZmVkdVxcQXBwRGF0YVxcUm9hbWluZ1xcbnZtXFx2OC40LjBcXG5vZGVfbW9kdWxlc1xcZ2VuZXJhdG9yLXNwZWVkc2VlZFxcbm9kZV9tb2R1bGVzXFxjcm9zcy1zcGF3blxcbGliXFx1dGlsXFxyZWFkU2hlYmFuZy5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxZQUFZLENBQUM7QUFFYixJQUFJLEVBQUUsR0FBRyxPQUFPLENBQUMsSUFBSSxDQUFDLENBQUM7QUFDdkIsSUFBSSxHQUFHLEdBQUcsT0FBTyxDQUFDLFdBQVcsQ0FBQyxDQUFDO0FBQy9CLElBQUksY0FBYyxHQUFHLE9BQU8sQ0FBQyxpQkFBaUIsQ0FBQyxDQUFDO0FBRWhELElBQUksWUFBWSxHQUFHLElBQUksR0FBRyxDQUFDLEVBQUUsR0FBRyxFQUFFLEVBQUUsRUFBRSxNQUFNLEVBQUUsRUFBRSxHQUFHLElBQUksRUFBRSxDQUFDLENBQUMsQ0FBRSx1QkFBdUI7QUFFcEYscUJBQXFCLE9BQU87SUFDeEIsSUFBSSxNQUFNLENBQUM7SUFDWCxJQUFJLEVBQUUsQ0FBQztJQUNQLElBQUksT0FBTyxDQUFDO0lBRVosb0NBQW9DO0lBQ3BDLEVBQUUsQ0FBQyxDQUFDLFlBQVksQ0FBQyxHQUFHLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBQzVCLE1BQU0sQ0FBQyxZQUFZLENBQUMsR0FBRyxDQUFDLE9BQU8sQ0FBQyxDQUFDO0lBQ3JDLENBQUM7SUFFRCx5Q0FBeUM7SUFDekMsTUFBTSxHQUFHLElBQUksTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBRXpCLElBQUksQ0FBQztRQUNELEVBQUUsR0FBRyxFQUFFLENBQUMsUUFBUSxDQUFDLE9BQU8sRUFBRSxHQUFHLENBQUMsQ0FBQztRQUMvQixFQUFFLENBQUMsUUFBUSxDQUFDLEVBQUUsRUFBRSxNQUFNLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLENBQUMsQ0FBQztRQUNuQyxFQUFFLENBQUMsU0FBUyxDQUFDLEVBQUUsQ0FBQyxDQUFDO0lBQ3JCLENBQUM7SUFBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQWEsQ0FBQztJQUUzQixpRUFBaUU7SUFDakUsT0FBTyxHQUFHLGNBQWMsQ0FBQyxNQUFNLENBQUMsUUFBUSxFQUFFLENBQUMsQ0FBQztJQUU1QyxpQ0FBaUM7SUFDakMsWUFBWSxDQUFDLEdBQUcsQ0FBQyxPQUFPLEVBQUUsT0FBTyxDQUFDLENBQUM7SUFFbkMsTUFBTSxDQUFDLE9BQU8sQ0FBQztBQUNuQixDQUFDO0FBRUQsTUFBTSxDQUFDLE9BQU8sR0FBRyxXQUFXLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbnZhciBmcyA9IHJlcXVpcmUoJ2ZzJyk7XG52YXIgTFJVID0gcmVxdWlyZSgnbHJ1LWNhY2hlJyk7XG52YXIgc2hlYmFuZ0NvbW1hbmQgPSByZXF1aXJlKCdzaGViYW5nLWNvbW1hbmQnKTtcblxudmFyIHNoZWJhbmdDYWNoZSA9IG5ldyBMUlUoeyBtYXg6IDUwLCBtYXhBZ2U6IDMwICogMTAwMCB9KTsgIC8vIENhY2hlIGp1c3QgZm9yIDMwc2VjXG5cbmZ1bmN0aW9uIHJlYWRTaGViYW5nKGNvbW1hbmQpIHtcbiAgICB2YXIgYnVmZmVyO1xuICAgIHZhciBmZDtcbiAgICB2YXIgc2hlYmFuZztcblxuICAgIC8vIENoZWNrIGlmIGl0IGlzIGluIHRoZSBjYWNoZSBmaXJzdFxuICAgIGlmIChzaGViYW5nQ2FjaGUuaGFzKGNvbW1hbmQpKSB7XG4gICAgICAgIHJldHVybiBzaGViYW5nQ2FjaGUuZ2V0KGNvbW1hbmQpO1xuICAgIH1cblxuICAgIC8vIFJlYWQgdGhlIGZpcnN0IDE1MCBieXRlcyBmcm9tIHRoZSBmaWxlXG4gICAgYnVmZmVyID0gbmV3IEJ1ZmZlcigxNTApO1xuXG4gICAgdHJ5IHtcbiAgICAgICAgZmQgPSBmcy5vcGVuU3luYyhjb21tYW5kLCAncicpO1xuICAgICAgICBmcy5yZWFkU3luYyhmZCwgYnVmZmVyLCAwLCAxNTAsIDApO1xuICAgICAgICBmcy5jbG9zZVN5bmMoZmQpO1xuICAgIH0gY2F0Y2ggKGUpIHsgLyogZW1wdHkgKi8gfVxuXG4gICAgLy8gQXR0ZW1wdCB0byBleHRyYWN0IHNoZWJhbmcgKG51bGwgaXMgcmV0dXJuZWQgaWYgbm90IGEgc2hlYmFuZylcbiAgICBzaGViYW5nID0gc2hlYmFuZ0NvbW1hbmQoYnVmZmVyLnRvU3RyaW5nKCkpO1xuXG4gICAgLy8gU3RvcmUgdGhlIHNoZWJhbmcgaW4gdGhlIGNhY2hlXG4gICAgc2hlYmFuZ0NhY2hlLnNldChjb21tYW5kLCBzaGViYW5nKTtcblxuICAgIHJldHVybiBzaGViYW5nO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHJlYWRTaGViYW5nO1xuIl19