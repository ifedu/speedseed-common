'use strict';
var minimatch = require('minimatch');
var arrayUnion = require('array-union');
var arrayDiffer = require('array-differ');
var arrify = require('arrify');
module.exports = function (list, patterns, options) {
    list = arrify(list);
    patterns = arrify(patterns);
    if (list.length === 0 || patterns.length === 0) {
        return [];
    }
    options = options || {};
    return patterns.reduce(function (ret, pattern) {
        var process = arrayUnion;
        if (pattern[0] === '!') {
            pattern = pattern.slice(1);
            process = arrayDiffer;
        }
        return process(ret, minimatch.match(list, pattern, options));
    }, []);
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQzpcXFVzZXJzXFxpZmVkdVxcQXBwRGF0YVxcUm9hbWluZ1xcbnZtXFx2OC40LjBcXG5vZGVfbW9kdWxlc1xcZ2VuZXJhdG9yLXNwZWVkc2VlZFxcbm9kZV9tb2R1bGVzXFxtdWx0aW1hdGNoXFxpbmRleC5qcyIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxpZmVkdVxcQXBwRGF0YVxcUm9hbWluZ1xcbnZtXFx2OC40LjBcXG5vZGVfbW9kdWxlc1xcZ2VuZXJhdG9yLXNwZWVkc2VlZFxcbm9kZV9tb2R1bGVzXFxtdWx0aW1hdGNoXFxpbmRleC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxZQUFZLENBQUM7QUFDYixJQUFJLFNBQVMsR0FBRyxPQUFPLENBQUMsV0FBVyxDQUFDLENBQUM7QUFDckMsSUFBSSxVQUFVLEdBQUcsT0FBTyxDQUFDLGFBQWEsQ0FBQyxDQUFDO0FBQ3hDLElBQUksV0FBVyxHQUFHLE9BQU8sQ0FBQyxjQUFjLENBQUMsQ0FBQztBQUMxQyxJQUFJLE1BQU0sR0FBRyxPQUFPLENBQUMsUUFBUSxDQUFDLENBQUM7QUFFL0IsTUFBTSxDQUFDLE9BQU8sR0FBRyxVQUFVLElBQUksRUFBRSxRQUFRLEVBQUUsT0FBTztJQUNqRCxJQUFJLEdBQUcsTUFBTSxDQUFDLElBQUksQ0FBQyxDQUFDO0lBQ3BCLFFBQVEsR0FBRyxNQUFNLENBQUMsUUFBUSxDQUFDLENBQUM7SUFFNUIsRUFBRSxDQUFDLENBQUMsSUFBSSxDQUFDLE1BQU0sS0FBSyxDQUFDLElBQUksUUFBUSxDQUFDLE1BQU0sS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBQ2hELE1BQU0sQ0FBQyxFQUFFLENBQUM7SUFDWCxDQUFDO0lBRUQsT0FBTyxHQUFHLE9BQU8sSUFBSSxFQUFFLENBQUM7SUFFeEIsTUFBTSxDQUFDLFFBQVEsQ0FBQyxNQUFNLENBQUMsVUFBVSxHQUFHLEVBQUUsT0FBTztRQUM1QyxJQUFJLE9BQU8sR0FBRyxVQUFVLENBQUM7UUFFekIsRUFBRSxDQUFDLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxLQUFLLEdBQUcsQ0FBQyxDQUFDLENBQUM7WUFDeEIsT0FBTyxHQUFHLE9BQU8sQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUM7WUFDM0IsT0FBTyxHQUFHLFdBQVcsQ0FBQztRQUN2QixDQUFDO1FBRUQsTUFBTSxDQUFDLE9BQU8sQ0FBQyxHQUFHLEVBQUUsU0FBUyxDQUFDLEtBQUssQ0FBQyxJQUFJLEVBQUUsT0FBTyxFQUFFLE9BQU8sQ0FBQyxDQUFDLENBQUM7SUFDOUQsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDO0FBQ1IsQ0FBQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xudmFyIG1pbmltYXRjaCA9IHJlcXVpcmUoJ21pbmltYXRjaCcpO1xudmFyIGFycmF5VW5pb24gPSByZXF1aXJlKCdhcnJheS11bmlvbicpO1xudmFyIGFycmF5RGlmZmVyID0gcmVxdWlyZSgnYXJyYXktZGlmZmVyJyk7XG52YXIgYXJyaWZ5ID0gcmVxdWlyZSgnYXJyaWZ5Jyk7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGxpc3QsIHBhdHRlcm5zLCBvcHRpb25zKSB7XG5cdGxpc3QgPSBhcnJpZnkobGlzdCk7XG5cdHBhdHRlcm5zID0gYXJyaWZ5KHBhdHRlcm5zKTtcblxuXHRpZiAobGlzdC5sZW5ndGggPT09IDAgfHwgcGF0dGVybnMubGVuZ3RoID09PSAwKSB7XG5cdFx0cmV0dXJuIFtdO1xuXHR9XG5cblx0b3B0aW9ucyA9IG9wdGlvbnMgfHwge307XG5cblx0cmV0dXJuIHBhdHRlcm5zLnJlZHVjZShmdW5jdGlvbiAocmV0LCBwYXR0ZXJuKSB7XG5cdFx0dmFyIHByb2Nlc3MgPSBhcnJheVVuaW9uO1xuXG5cdFx0aWYgKHBhdHRlcm5bMF0gPT09ICchJykge1xuXHRcdFx0cGF0dGVybiA9IHBhdHRlcm4uc2xpY2UoMSk7XG5cdFx0XHRwcm9jZXNzID0gYXJyYXlEaWZmZXI7XG5cdFx0fVxuXG5cdFx0cmV0dXJuIHByb2Nlc3MocmV0LCBtaW5pbWF0Y2gubWF0Y2gobGlzdCwgcGF0dGVybiwgb3B0aW9ucykpO1xuXHR9LCBbXSk7XG59O1xuIl19