/** @module env/util */
'use strict';
var GroupedQueue = require('grouped-queue');
/**
 * Create a "sloppy" copy of an initial Environment object. The focus of this method is on
 * performance rather than correctly deep copying every property or recreating a correct
 * instance. Use carefully and don't rely on `hasOwnProperty` of the copied environment.
 *
 * Every property are shared except the runLoop which is regenerated.
 *
 * @param {Environment} initialEnv - an Environment instance
 * @return {Environment} sloppy copy of the initial Environment
 */
exports.duplicateEnv = function (initialEnv) {
    var queues = require('../environment').queues;
    // Hack: create a clone of the environment with a new instance of runLoop
    var env = Object.create(initialEnv);
    env.runLoop = new GroupedQueue(queues);
    return env;
};
/**
 * Log utility
 * @see {@link env/log}
 */
exports.log = require('./log');
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQzpcXFVzZXJzXFxpZmVkdVxcQXBwRGF0YVxcUm9hbWluZ1xcbnZtXFx2OC40LjBcXG5vZGVfbW9kdWxlc1xcZ2VuZXJhdG9yLXNwZWVkc2VlZFxcbm9kZV9tb2R1bGVzXFx5ZW9tYW4tZW52aXJvbm1lbnRcXGxpYlxcdXRpbFxcdXRpbC5qcyIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxpZmVkdVxcQXBwRGF0YVxcUm9hbWluZ1xcbnZtXFx2OC40LjBcXG5vZGVfbW9kdWxlc1xcZ2VuZXJhdG9yLXNwZWVkc2VlZFxcbm9kZV9tb2R1bGVzXFx5ZW9tYW4tZW52aXJvbm1lbnRcXGxpYlxcdXRpbFxcdXRpbC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSx1QkFBdUI7QUFDdkIsWUFBWSxDQUFDO0FBRWIsSUFBSSxZQUFZLEdBQUcsT0FBTyxDQUFDLGVBQWUsQ0FBQyxDQUFDO0FBRTVDOzs7Ozs7Ozs7R0FTRztBQUVILE9BQU8sQ0FBQyxZQUFZLEdBQUcsVUFBVSxVQUFVO0lBQ3pDLElBQUksTUFBTSxHQUFHLE9BQU8sQ0FBQyxnQkFBZ0IsQ0FBQyxDQUFDLE1BQU0sQ0FBQztJQUM5Qyx5RUFBeUU7SUFDekUsSUFBSSxHQUFHLEdBQUcsTUFBTSxDQUFDLE1BQU0sQ0FBQyxVQUFVLENBQUMsQ0FBQztJQUNwQyxHQUFHLENBQUMsT0FBTyxHQUFHLElBQUksWUFBWSxDQUFDLE1BQU0sQ0FBQyxDQUFDO0lBQ3ZDLE1BQU0sQ0FBQyxHQUFHLENBQUM7QUFDYixDQUFDLENBQUM7QUFFRjs7O0dBR0c7QUFDSCxPQUFPLENBQUMsR0FBRyxHQUFHLE9BQU8sQ0FBQyxPQUFPLENBQUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKiBAbW9kdWxlIGVudi91dGlsICovXG4ndXNlIHN0cmljdCc7XG5cbnZhciBHcm91cGVkUXVldWUgPSByZXF1aXJlKCdncm91cGVkLXF1ZXVlJyk7XG5cbi8qKlxuICogQ3JlYXRlIGEgXCJzbG9wcHlcIiBjb3B5IG9mIGFuIGluaXRpYWwgRW52aXJvbm1lbnQgb2JqZWN0LiBUaGUgZm9jdXMgb2YgdGhpcyBtZXRob2QgaXMgb25cbiAqIHBlcmZvcm1hbmNlIHJhdGhlciB0aGFuIGNvcnJlY3RseSBkZWVwIGNvcHlpbmcgZXZlcnkgcHJvcGVydHkgb3IgcmVjcmVhdGluZyBhIGNvcnJlY3RcbiAqIGluc3RhbmNlLiBVc2UgY2FyZWZ1bGx5IGFuZCBkb24ndCByZWx5IG9uIGBoYXNPd25Qcm9wZXJ0eWAgb2YgdGhlIGNvcGllZCBlbnZpcm9ubWVudC5cbiAqXG4gKiBFdmVyeSBwcm9wZXJ0eSBhcmUgc2hhcmVkIGV4Y2VwdCB0aGUgcnVuTG9vcCB3aGljaCBpcyByZWdlbmVyYXRlZC5cbiAqXG4gKiBAcGFyYW0ge0Vudmlyb25tZW50fSBpbml0aWFsRW52IC0gYW4gRW52aXJvbm1lbnQgaW5zdGFuY2VcbiAqIEByZXR1cm4ge0Vudmlyb25tZW50fSBzbG9wcHkgY29weSBvZiB0aGUgaW5pdGlhbCBFbnZpcm9ubWVudFxuICovXG5cbmV4cG9ydHMuZHVwbGljYXRlRW52ID0gZnVuY3Rpb24gKGluaXRpYWxFbnYpIHtcbiAgdmFyIHF1ZXVlcyA9IHJlcXVpcmUoJy4uL2Vudmlyb25tZW50JykucXVldWVzO1xuICAvLyBIYWNrOiBjcmVhdGUgYSBjbG9uZSBvZiB0aGUgZW52aXJvbm1lbnQgd2l0aCBhIG5ldyBpbnN0YW5jZSBvZiBydW5Mb29wXG4gIHZhciBlbnYgPSBPYmplY3QuY3JlYXRlKGluaXRpYWxFbnYpO1xuICBlbnYucnVuTG9vcCA9IG5ldyBHcm91cGVkUXVldWUocXVldWVzKTtcbiAgcmV0dXJuIGVudjtcbn07XG5cbi8qKlxuICogTG9nIHV0aWxpdHlcbiAqIEBzZWUge0BsaW5rIGVudi9sb2d9XG4gKi9cbmV4cG9ydHMubG9nID0gcmVxdWlyZSgnLi9sb2cnKTtcbiJdfQ==